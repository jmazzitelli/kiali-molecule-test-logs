/bin/bash: line 1: go: command not found
Pulling down latest helm-charts from remote repo to here: /tmp/KIALI-GIT/helm-charts
Git repo for the helm charts is found here: /tmp/KIALI-GIT/helm-charts
make[1]: Entering directory '/tmp/KIALI-GIT/helm-charts'
Will use this helm executable: /tmp/KIALI-GIT/helm-charts/_output/helm-install/helm
Building Helm Chart for Kiali operator
==> Linting /tmp/KIALI-GIT/helm-charts/_output/charts/kiali-operator

1 chart(s) linted, 0 chart(s) failed
Successfully packaged chart and saved it to: /tmp/KIALI-GIT/helm-charts/_output/charts/kiali-operator-1.82.0-SNAPSHOT.tgz
make[1]: Leaving directory '/tmp/KIALI-GIT/helm-charts'
OCP repos: external=[default-route-openshift-image-registry.apps.ocp4.local] internal=[image-registry.openshift-image-registry.svc:5000]

Will auto-detect hosts to add based on the CLUSTER_REPO: default-route-openshift-image-registry.apps.ocp4.local
Auto-detected add host args: --add-host=kiali-istio-system.apps.ocp4.local:192.168.122.2 --add-host=prometheus-istio-system.apps.ocp4.local:192.168.122.2 --add-host=api.ocp4.local:192.168.122.2 --add-host=oauth-openshift.apps.ocp4.local:192.168.122.2
Will not rebuild kiali-molecule image.
podman volume exists molecule-tests-volume && echo "Podman volume already exists; deleting it" && podman volume rm molecule-tests-volume || true
podman volume create molecule-tests-volume
molecule-tests-volume
podman create -v molecule-tests-volume:/data --name molecule-volume-helper docker.io/busybox true
a592f51b0614b05c2443660d7c59dbea300f9ddf2c97a44e0030dee3fed9b9bb
podman cp "/tmp/KIALI-GIT/helm-charts" molecule-volume-helper:/data/helm-charts-repo
podman cp "/tmp/KIALI-GIT/kiali/operator/" molecule-volume-helper:/data/operator
podman cp "/home/jmazzite/.kube/config" molecule-volume-helper:/data/kubeconfig
podman rm molecule-volume-helper
molecule-volume-helper
namespace/kiali-operator created
secret/kiali-operator-pull-secret created
secret/kiali-operator-pull-secret labeled
for msn in cluster-wide-access-test; do podman run --rm  --env KUBECONFIG="/tmp/molecule/kubeconfig" --env K8S_AUTH_KUBECONFIG="/tmp/molecule/kubeconfig" --env MOLECULE_CLUSTER_TYPE="openshift" --env MOLECULE_HELM_CHARTS_REPO=/tmp/molecule/helm-charts-repo -v molecule-tests-volume:/tmp/molecule    -w /tmp/molecule/operator --network="host" --add-host=kiali-istio-system.apps.ocp4.local:192.168.122.2 --add-host=prometheus-istio-system.apps.ocp4.local:192.168.122.2 --add-host=api.ocp4.local:192.168.122.2 --add-host=oauth-openshift.apps.ocp4.local:192.168.122.2 --add-host="api.crc.testing:192.168.130.11" --add-host="kiali-istio-system.apps-crc.testing:192.168.130.11" --add-host="prometheus-istio-system.apps-crc.testing:192.168.130.11" --env DORP=podman --env OPERATOR_IMAGE_PULL_SECRET_NAME=kiali-operator-pull-secret --env MOLECULE_KIALI_CR_SPEC_VERSION=default --env PLUGIN_IMAGE_PULL_SECRET_JSON="" --env MOLECULE_OSSMCONSOLE_CR_SPEC_VERSION="default"  --env MOLECULE_OPERATOR_PROFILER_ENABLED=true --env MOLECULE_OPERATOR_INSTALLER=helm --env MOLECULE_DUMP_LOGS_ON_ERROR=true  --env MOLECULE_WAIT_RETRIES=360 localhost/kiali-molecule:latest molecule --debug test  --scenario-name ${msn}; if [ "$?" != "0" ]; then echo "Molecule test failed: ${msn}"; podman volume rm molecule-tests-volume; exit 1; fi; done
DEBUG    Validating schema /tmp/molecule/operator/molecule/cluster-wide-access-test/molecule.yml.
WARNING  Driver podman does not provide a schema.
INFO     cluster-wide-access-test scenario test matrix: prepare, converge, destroy
INFO     Performing prerun with role_name_check=0...
INFO     Running ansible-galaxy collection install -v -r requirements.yml
INFO     Set ANSIBLE_ROLES_PATH=roles:/home/runner/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles
INFO     Running cluster-wide-access-test > prepare
INFO     Sanity checks: 'podman'
DEBUG: ANSIBLE ENVIRONMENT:
ANSIBLE_COLLECTIONS_PATH: /home/runner/.cache/molecule/operator/cluster-wide-access-test/collections:/home/runner/.ansible/collections:/usr/share/ansible/collections:/etc/ansible/collections
ANSIBLE_CONFIG: /home/runner/.cache/molecule/operator/cluster-wide-access-test/ansible.cfg
ANSIBLE_FILTER_PLUGINS: /usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/filter:/home/runner/.cache/molecule/operator/cluster-wide-access-test/plugins/filter:/tmp/molecule/operator/plugins/filter:/home/runner/.ansible/plugins/filter:/usr/share/ansible/plugins/filter
ANSIBLE_LIBRARY: /usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/modules:/usr/local/lib/python3.11/site-packages/molecule_plugins/vagrant/modules:/home/runner/.cache/molecule/operator/cluster-wide-access-test/library:/tmp/molecule/operator/library:/home/runner/.ansible/plugins/modules:/usr/share/ansible/plugins/modules
ANSIBLE_ROLES_PATH: /home/runner/.cache/molecule/operator/cluster-wide-access-test/roles:/tmp/molecule:/home/runner/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles

DEBUG: MOLECULE ENVIRONMENT:
MOLECULE_CLUSTER_TYPE: openshift
MOLECULE_DEBUG: 'True'
MOLECULE_DEPENDENCY_NAME: galaxy
MOLECULE_DRIVER_NAME: podman
MOLECULE_DUMP_LOGS_ON_ERROR: 'true'
MOLECULE_ENV_FILE: /tmp/molecule/operator/.env.yml
MOLECULE_EPHEMERAL_DIRECTORY: /home/runner/.cache/molecule/operator/cluster-wide-access-test
MOLECULE_FILE: /home/runner/.cache/molecule/operator/cluster-wide-access-test/molecule.yml
MOLECULE_HELM_CHARTS_REPO: /tmp/molecule/helm-charts-repo
MOLECULE_INSTANCE_CONFIG: /home/runner/.cache/molecule/operator/cluster-wide-access-test/instance_config.yml
MOLECULE_INVENTORY_FILE: /home/runner/.cache/molecule/operator/cluster-wide-access-test/inventory/ansible_inventory.yml
MOLECULE_KIALI_CR_SPEC_VERSION: default
MOLECULE_OPERATOR_INSTALLER: helm
MOLECULE_OPERATOR_PROFILER_ENABLED: 'true'
MOLECULE_OSSMCONSOLE_CR_SPEC_VERSION: default
MOLECULE_PROJECT_DIRECTORY: /tmp/molecule/operator
MOLECULE_PROVISIONER_NAME: ansible
MOLECULE_SCENARIO_DIRECTORY: /tmp/molecule/operator/molecule/cluster-wide-access-test
MOLECULE_SCENARIO_NAME: cluster-wide-access-test
MOLECULE_STATE_FILE: /home/runner/.cache/molecule/operator/cluster-wide-access-test/state.yml
MOLECULE_VERIFIER_NAME: ansible
MOLECULE_VERIFIER_TEST_DIRECTORY: /tmp/molecule/operator/molecule/cluster-wide-access-test/tests
MOLECULE_WAIT_RETRIES: '360'

DEBUG: SHELL REPLAY:
ANSIBLE_COLLECTIONS_PATH=/home/runner/.cache/molecule/operator/cluster-wide-access-test/collections:/home/runner/.ansible/collections:/usr/share/ansible/collections:/etc/ansible/collections ANSIBLE_CONFIG=/home/runner/.cache/molecule/operator/cluster-wide-access-test/ansible.cfg ANSIBLE_FILTER_PLUGINS=/usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/filter:/home/runner/.cache/molecule/operator/cluster-wide-access-test/plugins/filter:/tmp/molecule/operator/plugins/filter:/home/runner/.ansible/plugins/filter:/usr/share/ansible/plugins/filter ANSIBLE_LIBRARY=/usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/modules:/usr/local/lib/python3.11/site-packages/molecule_plugins/vagrant/modules:/home/runner/.cache/molecule/operator/cluster-wide-access-test/library:/tmp/molecule/operator/library:/home/runner/.ansible/plugins/modules:/usr/share/ansible/plugins/modules ANSIBLE_ROLES_PATH=/home/runner/.cache/molecule/operator/cluster-wide-access-test/roles:/tmp/molecule:/home/runner/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles MOLECULE_CLUSTER_TYPE=openshift MOLECULE_DEBUG=True MOLECULE_DEPENDENCY_NAME=galaxy MOLECULE_DRIVER_NAME=podman MOLECULE_DUMP_LOGS_ON_ERROR=true MOLECULE_ENV_FILE=/tmp/molecule/operator/.env.yml MOLECULE_EPHEMERAL_DIRECTORY=/home/runner/.cache/molecule/operator/cluster-wide-access-test MOLECULE_FILE=/home/runner/.cache/molecule/operator/cluster-wide-access-test/molecule.yml MOLECULE_HELM_CHARTS_REPO=/tmp/molecule/helm-charts-repo MOLECULE_INSTANCE_CONFIG=/home/runner/.cache/molecule/operator/cluster-wide-access-test/instance_config.yml MOLECULE_INVENTORY_FILE=/home/runner/.cache/molecule/operator/cluster-wide-access-test/inventory/ansible_inventory.yml MOLECULE_KIALI_CR_SPEC_VERSION=default MOLECULE_OPERATOR_INSTALLER=helm MOLECULE_OPERATOR_PROFILER_ENABLED=true MOLECULE_OSSMCONSOLE_CR_SPEC_VERSION=default MOLECULE_PROJECT_DIRECTORY=/tmp/molecule/operator MOLECULE_PROVISIONER_NAME=ansible MOLECULE_SCENARIO_DIRECTORY=/tmp/molecule/operator/molecule/cluster-wide-access-test MOLECULE_SCENARIO_NAME=cluster-wide-access-test MOLECULE_STATE_FILE=/home/runner/.cache/molecule/operator/cluster-wide-access-test/state.yml MOLECULE_VERIFIER_NAME=ansible MOLECULE_VERIFIER_TEST_DIRECTORY=/tmp/molecule/operator/molecule/cluster-wide-access-test/tests MOLECULE_WAIT_RETRIES=360


PLAY [Prepare] *****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

PLAY [Process Test Namespaces [state=present]] *********************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [k8s] *********************************************************************
changed: [localhost]

TASK [k8s] *********************************************************************
changed: [localhost]

TASK [k8s] *********************************************************************
changed: [localhost]

PLAY [Prepare] *****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Get information about the cluster] ***************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Determine the cluster type] **********************************************
ok: [localhost]

TASK [Determine if the operator installation is managed externally or not] *****
ok: [localhost]

TASK [Make sure the operator namespace exists] *********************************
ok: [localhost]

TASK [Find the latest Operator Helm Chart] *************************************
changed: [localhost]

TASK [set_fact] ****************************************************************
ok: [localhost]

TASK [fail] ********************************************************************
skipping: [localhost]

TASK [Install Operator via Helm] ***********************************************
changed: [localhost]

TASK [Make sure the CR namespace exists] ***************************************
ok: [localhost]

TASK [Wait for the CRD to be established] **************************************
ok: [localhost]

TASK [Prepare initial Kiali CR definition based solely on the template] ********
ok: [localhost]

TASK [Create Kiali CR] *********************************************************
changed: [localhost]

TASK [Asserting that Kiali is Deployed] ****************************************
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (360 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (359 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (358 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (357 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (356 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (355 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (354 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (353 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (352 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (351 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (350 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (349 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (348 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (347 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (346 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali is Deployed (345 retries left).
ok: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=18   changed=6    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0

INFO     Running cluster-wide-access-test > converge
DEBUG: ANSIBLE ENVIRONMENT:
ANSIBLE_COLLECTIONS_PATH: /home/runner/.cache/molecule/operator/cluster-wide-access-test/collections:/home/runner/.ansible/collections:/usr/share/ansible/collections:/etc/ansible/collections
ANSIBLE_CONFIG: /home/runner/.cache/molecule/operator/cluster-wide-access-test/ansible.cfg
ANSIBLE_FILTER_PLUGINS: /usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/filter:/home/runner/.cache/molecule/operator/cluster-wide-access-test/plugins/filter:/tmp/molecule/operator/plugins/filter:/home/runner/.ansible/plugins/filter:/usr/share/ansible/plugins/filter
ANSIBLE_LIBRARY: /usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/modules:/usr/local/lib/python3.11/site-packages/molecule_plugins/vagrant/modules:/home/runner/.cache/molecule/operator/cluster-wide-access-test/library:/tmp/molecule/operator/library:/home/runner/.ansible/plugins/modules:/usr/share/ansible/plugins/modules
ANSIBLE_ROLES_PATH: /home/runner/.cache/molecule/operator/cluster-wide-access-test/roles:/tmp/molecule:/home/runner/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles

DEBUG: MOLECULE ENVIRONMENT:
MOLECULE_CLUSTER_TYPE: openshift
MOLECULE_DEBUG: 'True'
MOLECULE_DEPENDENCY_NAME: galaxy
MOLECULE_DRIVER_NAME: podman
MOLECULE_DUMP_LOGS_ON_ERROR: 'true'
MOLECULE_ENV_FILE: /tmp/molecule/operator/.env.yml
MOLECULE_EPHEMERAL_DIRECTORY: /home/runner/.cache/molecule/operator/cluster-wide-access-test
MOLECULE_FILE: /home/runner/.cache/molecule/operator/cluster-wide-access-test/molecule.yml
MOLECULE_HELM_CHARTS_REPO: /tmp/molecule/helm-charts-repo
MOLECULE_INSTANCE_CONFIG: /home/runner/.cache/molecule/operator/cluster-wide-access-test/instance_config.yml
MOLECULE_INVENTORY_FILE: /home/runner/.cache/molecule/operator/cluster-wide-access-test/inventory/ansible_inventory.yml
MOLECULE_KIALI_CR_SPEC_VERSION: default
MOLECULE_OPERATOR_INSTALLER: helm
MOLECULE_OPERATOR_PROFILER_ENABLED: 'true'
MOLECULE_OSSMCONSOLE_CR_SPEC_VERSION: default
MOLECULE_PROJECT_DIRECTORY: /tmp/molecule/operator
MOLECULE_PROVISIONER_NAME: ansible
MOLECULE_SCENARIO_DIRECTORY: /tmp/molecule/operator/molecule/cluster-wide-access-test
MOLECULE_SCENARIO_NAME: cluster-wide-access-test
MOLECULE_STATE_FILE: /home/runner/.cache/molecule/operator/cluster-wide-access-test/state.yml
MOLECULE_VERIFIER_NAME: ansible
MOLECULE_VERIFIER_TEST_DIRECTORY: /tmp/molecule/operator/molecule/cluster-wide-access-test/tests
MOLECULE_WAIT_RETRIES: '360'

DEBUG: SHELL REPLAY:
ANSIBLE_COLLECTIONS_PATH=/home/runner/.cache/molecule/operator/cluster-wide-access-test/collections:/home/runner/.ansible/collections:/usr/share/ansible/collections:/etc/ansible/collections ANSIBLE_CONFIG=/home/runner/.cache/molecule/operator/cluster-wide-access-test/ansible.cfg ANSIBLE_FILTER_PLUGINS=/usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/filter:/home/runner/.cache/molecule/operator/cluster-wide-access-test/plugins/filter:/tmp/molecule/operator/plugins/filter:/home/runner/.ansible/plugins/filter:/usr/share/ansible/plugins/filter ANSIBLE_LIBRARY=/usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/modules:/usr/local/lib/python3.11/site-packages/molecule_plugins/vagrant/modules:/home/runner/.cache/molecule/operator/cluster-wide-access-test/library:/tmp/molecule/operator/library:/home/runner/.ansible/plugins/modules:/usr/share/ansible/plugins/modules ANSIBLE_ROLES_PATH=/home/runner/.cache/molecule/operator/cluster-wide-access-test/roles:/tmp/molecule:/home/runner/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles MOLECULE_CLUSTER_TYPE=openshift MOLECULE_DEBUG=True MOLECULE_DEPENDENCY_NAME=galaxy MOLECULE_DRIVER_NAME=podman MOLECULE_DUMP_LOGS_ON_ERROR=true MOLECULE_ENV_FILE=/tmp/molecule/operator/.env.yml MOLECULE_EPHEMERAL_DIRECTORY=/home/runner/.cache/molecule/operator/cluster-wide-access-test MOLECULE_FILE=/home/runner/.cache/molecule/operator/cluster-wide-access-test/molecule.yml MOLECULE_HELM_CHARTS_REPO=/tmp/molecule/helm-charts-repo MOLECULE_INSTANCE_CONFIG=/home/runner/.cache/molecule/operator/cluster-wide-access-test/instance_config.yml MOLECULE_INVENTORY_FILE=/home/runner/.cache/molecule/operator/cluster-wide-access-test/inventory/ansible_inventory.yml MOLECULE_KIALI_CR_SPEC_VERSION=default MOLECULE_OPERATOR_INSTALLER=helm MOLECULE_OPERATOR_PROFILER_ENABLED=true MOLECULE_OSSMCONSOLE_CR_SPEC_VERSION=default MOLECULE_PROJECT_DIRECTORY=/tmp/molecule/operator MOLECULE_PROVISIONER_NAME=ansible MOLECULE_SCENARIO_DIRECTORY=/tmp/molecule/operator/molecule/cluster-wide-access-test MOLECULE_SCENARIO_NAME=cluster-wide-access-test MOLECULE_STATE_FILE=/home/runner/.cache/molecule/operator/cluster-wide-access-test/state.yml MOLECULE_VERIFIER_NAME=ansible MOLECULE_VERIFIER_TEST_DIRECTORY=/tmp/molecule/operator/molecule/cluster-wide-access-test/tests MOLECULE_WAIT_RETRIES=360


PLAY [Tests] *******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/tasks.yml for localhost

TASK [Get information about the cluster] ***************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Determine the cluster type] **********************************************
ok: [localhost]

TASK [Get Kiali CR if present] *************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Get Kiali Operator Pod] **************************************************
ok: [localhost]

TASK [Get Kiali Pod] ***********************************************************
ok: [localhost]

TASK [Get Kiali Configmap] *****************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Format Configmap] ********************************************************
ok: [localhost]

TASK [Get Kiali Deployment] ****************************************************
ok: [localhost]

TASK [Get Kiali Service] *******************************************************
ok: [localhost]

TASK [Get Kiali Route] *********************************************************
ok: [localhost]

TASK [Get Kiali Ingress] *******************************************************
skipping: [localhost]

TASK [Determine the Kiali Route URL on OpenShift] ******************************
ok: [localhost]

TASK [Determine the Kiali Ingress URL on minikube] *****************************
skipping: [localhost]

TASK [Determine the Kiali Ingress URL on kind] *********************************
skipping: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/pod_asserts.yml for localhost

TASK [Assert Kiali Pod is Running and there is only one] ***********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert Kiali Pod is Running on the correct Namespace] ********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/accessible_namespaces_contains.yml for localhost

TASK [Assert Accessible Namespaces contains ['**']] ****************************
ok: [localhost] => (item=**) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "**",
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "test to make sure the default AN=** behavior works (cluster-wide-access is True)"
}

TASK [assert] ******************************************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "assert that we have clusterroles since we have been given cluster wide access"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/rw_clusterrole_asserts.yml for localhost

TASK [Get cluster roles] *******************************************************
ok: [localhost]

TASK [Assert that cluster roles exist] *****************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Get cluster role binding] ************************************************
ok: [localhost]

TASK [Assert the cluster role binding provides the read-write role] ************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/none_role_asserts.yml for localhost

TASK [Get roles] ***************************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert that namespaces do not have the roles] ****************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get viewer roles] ********************************************************
ok: [localhost] => (item=['istio-system', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali-viewer'])

TASK [Assert that namespaces do not have the viewer roles] *********************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get role bindings] *******************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert the role bindings do not exist] ***********************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "The server should return all namespaces"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/assert-api-namespaces-result.yml for localhost

TASK [Call /namespaces API] ****************************************************
ok: [localhost]

TASK [Results of /namespaces API] **********************************************
ok: [localhost] => {
    "msg": {
        "changed": false,
        "connection": "close",
        "content": "[{\"name\":\"cluster-wide-access-test-1\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"discoverySelectorLabel1\":\"test\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-1\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c2\",\"openshift.io/sa.scc.supplemental-groups\":\"1000760000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000760000/10000\"}},{\"name\":\"cluster-wide-access-test-2\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"discoverySelectorLabel2\":\"matchme\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-2\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c7\",\"openshift.io/sa.scc.supplemental-groups\":\"1000770000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000770000/10000\"}},{\"name\":\"cluster-wide-access-test-x\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-x\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c12\",\"openshift.io/sa.scc.supplemental-groups\":\"1000780000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000780000/10000\"}},{\"name\":\"default\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kubernetes.io/metadata.name\":\"default\",\"pod-security.kubernetes.io/audit\":\"privileged\",\"pod-security.kubernetes.io/enforce\":\"privileged\",\"pod-security.kubernetes.io/warn\":\"privileged\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c1,c0\",\"openshift.io/sa.scc.supplemental-groups\":\"1000000000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000000000/10000\"}},{\"name\":\"istio-system\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kubernetes.io/metadata.name\":\"istio-system\",\"pod-security.kubernetes.io/audit\":\"privileged\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"privileged\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\",\"topology.istio.io/network\":\"\"},\"annotations\":{\"openshift.io/description\":\"\",\"openshift.io/display-name\":\"\",\"openshift.io/requester\":\"kube:admin\",\"openshift.io/sa.scc.mcs\":\"s0:c26,c20\",\"openshift.io/sa.scc.supplemental-groups\":\"1000690000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000690000/10000\"}},{\"name\":\"kiali\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kubernetes.io/metadata.name\":\"kiali\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c26,c25\",\"openshift.io/sa.scc.supplemental-groups\":\"1000700000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000700000/10000\"}}]",
        "content_type": "application/json",
        "cookies": {
            "d5b5278d6ecca213a6cda3f6cfaa8cef": "554a84d9417790ec55f69d3ae9ea42b9"
        },
        "cookies_string": "d5b5278d6ecca213a6cda3f6cfaa8cef=554a84d9417790ec55f69d3ae9ea42b9",
        "date": "Mon, 25 Mar 2024 06:37:50 GMT",
        "elapsed": 0,
        "failed": false,
        "json": [
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c2",
                    "openshift.io/sa.scc.supplemental-groups": "1000760000/10000",
                    "openshift.io/sa.scc.uid-range": "1000760000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "discoverySelectorLabel1": "test",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-1",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-1"
            },
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c7",
                    "openshift.io/sa.scc.supplemental-groups": "1000770000/10000",
                    "openshift.io/sa.scc.uid-range": "1000770000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "discoverySelectorLabel2": "matchme",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-2",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-2"
            },
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c12",
                    "openshift.io/sa.scc.supplemental-groups": "1000780000/10000",
                    "openshift.io/sa.scc.uid-range": "1000780000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-x",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-x"
            },
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c1,c0",
                    "openshift.io/sa.scc.supplemental-groups": "1000000000/10000",
                    "openshift.io/sa.scc.uid-range": "1000000000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kubernetes.io/metadata.name": "default",
                    "pod-security.kubernetes.io/audit": "privileged",
                    "pod-security.kubernetes.io/enforce": "privileged",
                    "pod-security.kubernetes.io/warn": "privileged"
                },
                "name": "default"
            },
            {
                "annotations": {
                    "openshift.io/description": "",
                    "openshift.io/display-name": "",
                    "openshift.io/requester": "kube:admin",
                    "openshift.io/sa.scc.mcs": "s0:c26,c20",
                    "openshift.io/sa.scc.supplemental-groups": "1000690000/10000",
                    "openshift.io/sa.scc.uid-range": "1000690000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kubernetes.io/metadata.name": "istio-system",
                    "pod-security.kubernetes.io/audit": "privileged",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "privileged",
                    "pod-security.kubernetes.io/warn-version": "v1.24",
                    "topology.istio.io/network": ""
                },
                "name": "istio-system"
            },
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c26,c25",
                    "openshift.io/sa.scc.supplemental-groups": "1000700000/10000",
                    "openshift.io/sa.scc.uid-range": "1000700000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kubernetes.io/metadata.name": "kiali",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "kiali"
            }
        ],
        "msg": "OK (unknown bytes)",
        "redirected": false,
        "set_cookie": "d5b5278d6ecca213a6cda3f6cfaa8cef=554a84d9417790ec55f69d3ae9ea42b9; path=/; HttpOnly; Secure; SameSite=None",
        "status": 200,
        "transfer_encoding": "chunked",
        "url": "https://kiali-istio-system.apps.ocp4.local/api/namespaces",
        "vary": "Accept-Encoding"
    }
}

TASK [Assert that we got no less than the minimum number of namespaces expected] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that we got no more than the maximum number of namespaces expected] ***
skipping: [localhost]

TASK [Assert that we got the namespaces expected] ******************************
ok: [localhost] => (item=istio-system) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "istio-system",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-1) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-1",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-2) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-2",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-x) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-x",
    "msg": "All assertions passed"
}

TASK [Assert that we did not get namespaces that were not expected] ************
ok: [localhost] => (item=kiali-operator) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kiali-operator",
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "change to accessible_namespaces to a fixed list of namespaces but keep cluster-wide-access (set to True)"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/set_accessible_namespaces_to_list.yml for localhost

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/cluster-wide-access-test/../common/../common/wait_for_kiali_cr_changes.yml for localhost

TASK [Wait for Kiali CR changes to take effect] ********************************
ok: [localhost]

TASK [Set accessible namespace to ['istio-system', 'cluster-wide-access-test-[1x]'] in current Kiali CR] ***
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/cluster-wide-access-test/../common/../common/set_kiali_cr.yml for localhost

TASK [Change Kiali CR with new Kiali CR] ***************************************
--- before
+++ after
@@ -1,43 +1,7 @@
 {
     "metadata": {
-        "generation": 1,
+        "generation": 2,
         "managedFields": [
-            {
-                "apiVersion": "kiali.io/v1alpha1",
-                "fieldsType": "FieldsV1",
-                "fieldsV1": {
-                    "f:spec": {
-                        ".": {},
-                        "f:auth": {
-                            ".": {},
-                            "f:strategy": {}
-                        },
-                        "f:deployment": {
-                            ".": {},
-                            "f:accessible_namespaces": {},
-                            "f:cluster_wide_access": {},
-                            "f:image_name": {},
-                            "f:image_pull_policy": {},
-                            "f:image_version": {},
-                            "f:ingress": {
-                                ".": {},
-                                "f:enabled": {}
-                            },
-                            "f:logger": {
-                                ".": {},
-                                "f:log_level": {}
-                            },
-                            "f:namespace": {},
-                            "f:service_type": {}
-                        },
-                        "f:istio_namespace": {},
-                        "f:version": {}
-                    }
-                },
-                "manager": "OpenAPI-Generator",
-                "operation": "Update",
-                "time": "2024-03-25T06:34:54Z"
-            },
             {
                 "apiVersion": "kiali.io/v1alpha1",
                 "fieldsType": "FieldsV1",
@@ -97,14 +61,51 @@
                 "operation": "Update",
                 "subresource": "status",
                 "time": "2024-03-25T06:36:31Z"
+            },
+            {
+                "apiVersion": "kiali.io/v1alpha1",
+                "fieldsType": "FieldsV1",
+                "fieldsV1": {
+                    "f:spec": {
+                        ".": {},
+                        "f:auth": {
+                            ".": {},
+                            "f:strategy": {}
+                        },
+                        "f:deployment": {
+                            ".": {},
+                            "f:accessible_namespaces": {},
+                            "f:cluster_wide_access": {},
+                            "f:image_name": {},
+                            "f:image_pull_policy": {},
+                            "f:image_version": {},
+                            "f:ingress": {
+                                ".": {},
+                                "f:enabled": {}
+                            },
+                            "f:logger": {
+                                ".": {},
+                                "f:log_level": {}
+                            },
+                            "f:namespace": {},
+                            "f:service_type": {}
+                        },
+                        "f:istio_namespace": {},
+                        "f:version": {}
+                    }
+                },
+                "manager": "OpenAPI-Generator",
+                "operation": "Update",
+                "time": "2024-03-25T06:37:56Z"
             }
         ],
-        "resourceVersion": "5128614"
+        "resourceVersion": "5129035"
     },
     "spec": {
         "deployment": {
             "accessible_namespaces": [
-                "**"
+                "istio-system",
+                "cluster-wide-access-test-[1x]"
             ]
         }
     }

changed: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_cr_changes.yml for localhost

TASK [Wait for Kiali CR changes to take effect] ********************************
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (360 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (359 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (358 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (357 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (356 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (355 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (354 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (353 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (352 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (351 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (350 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (349 retries left).
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_running.yml for localhost

TASK [Asserting that Kiali Pod exists and there is only one] *******************
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (360 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (359 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (358 retries left).
ok: [localhost]

TASK [Wait for Kiali to be running and accepting requests] *********************
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/tasks.yml for localhost

TASK [Get information about the cluster] ***************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Determine the cluster type] **********************************************
ok: [localhost]

TASK [Get Kiali CR if present] *************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Get Kiali Operator Pod] **************************************************
ok: [localhost]

TASK [Get Kiali Pod] ***********************************************************
ok: [localhost]

TASK [Get Kiali Configmap] *****************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Format Configmap] ********************************************************
ok: [localhost]

TASK [Get Kiali Deployment] ****************************************************
ok: [localhost]

TASK [Get Kiali Service] *******************************************************
ok: [localhost]

TASK [Get Kiali Route] *********************************************************
ok: [localhost]

TASK [Get Kiali Ingress] *******************************************************
skipping: [localhost]

TASK [Determine the Kiali Route URL on OpenShift] ******************************
ok: [localhost]

TASK [Determine the Kiali Ingress URL on minikube] *****************************
skipping: [localhost]

TASK [Determine the Kiali Ingress URL on kind] *********************************
skipping: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/pod_asserts.yml for localhost

TASK [Assert Kiali Pod is Running and there is only one] ***********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert Kiali Pod is Running on the correct Namespace] ********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/accessible_namespaces_equals.yml for localhost

TASK [Assert Accessible Namespaces is ['istio-system', 'cluster-wide-access-test-1', 'cluster-wide-access-test-x']] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "test the normal accessible namespaces"
}

TASK [Even though AN is not **, cluster wide access should still be True because we explicitly asked for it] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "assert that we have clusterroles since we have been given cluster wide access"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/rw_clusterrole_asserts.yml for localhost

TASK [Get cluster roles] *******************************************************
ok: [localhost]

TASK [Assert that cluster roles exist] *****************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Get cluster role binding] ************************************************
ok: [localhost]

TASK [Assert the cluster role binding provides the read-write role] ************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/none_role_asserts.yml for localhost

TASK [Get roles] ***************************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert that namespaces do not have the roles] ****************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get viewer roles] ********************************************************
ok: [localhost] => (item=['istio-system', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali-viewer'])

TASK [Assert that namespaces do not have the viewer roles] *********************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get role bindings] *******************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert the role bindings do not exist] ***********************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "the server should only return the AN namespaces (istio-system, cluster-wide-access-test-1, cluster-wide-access-test-x)"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/assert-api-namespaces-result.yml for localhost

TASK [Call /namespaces API] ****************************************************
ok: [localhost]

TASK [Results of /namespaces API] **********************************************
ok: [localhost] => {
    "msg": {
        "changed": false,
        "connection": "close",
        "content": "[{\"name\":\"cluster-wide-access-test-1\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"discoverySelectorLabel1\":\"test\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-1\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c2\",\"openshift.io/sa.scc.supplemental-groups\":\"1000760000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000760000/10000\"}},{\"name\":\"cluster-wide-access-test-x\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-x\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c12\",\"openshift.io/sa.scc.supplemental-groups\":\"1000780000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000780000/10000\"}},{\"name\":\"istio-system\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kubernetes.io/metadata.name\":\"istio-system\",\"pod-security.kubernetes.io/audit\":\"privileged\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"privileged\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\",\"topology.istio.io/network\":\"\"},\"annotations\":{\"openshift.io/description\":\"\",\"openshift.io/display-name\":\"\",\"openshift.io/requester\":\"kube:admin\",\"openshift.io/sa.scc.mcs\":\"s0:c26,c20\",\"openshift.io/sa.scc.supplemental-groups\":\"1000690000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000690000/10000\"}}]",
        "content_length": "1671",
        "content_type": "application/json",
        "cookies": {
            "d5b5278d6ecca213a6cda3f6cfaa8cef": "927b31222d8afd1e00a7f3e74f913865"
        },
        "cookies_string": "d5b5278d6ecca213a6cda3f6cfaa8cef=927b31222d8afd1e00a7f3e74f913865",
        "date": "Mon, 25 Mar 2024 06:40:52 GMT",
        "elapsed": 0,
        "failed": false,
        "json": [
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c2",
                    "openshift.io/sa.scc.supplemental-groups": "1000760000/10000",
                    "openshift.io/sa.scc.uid-range": "1000760000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "discoverySelectorLabel1": "test",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-1",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-1"
            },
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c12",
                    "openshift.io/sa.scc.supplemental-groups": "1000780000/10000",
                    "openshift.io/sa.scc.uid-range": "1000780000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-x",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-x"
            },
            {
                "annotations": {
                    "openshift.io/description": "",
                    "openshift.io/display-name": "",
                    "openshift.io/requester": "kube:admin",
                    "openshift.io/sa.scc.mcs": "s0:c26,c20",
                    "openshift.io/sa.scc.supplemental-groups": "1000690000/10000",
                    "openshift.io/sa.scc.uid-range": "1000690000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kubernetes.io/metadata.name": "istio-system",
                    "pod-security.kubernetes.io/audit": "privileged",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "privileged",
                    "pod-security.kubernetes.io/warn-version": "v1.24",
                    "topology.istio.io/network": ""
                },
                "name": "istio-system"
            }
        ],
        "msg": "OK (1671 bytes)",
        "redirected": false,
        "set_cookie": "d5b5278d6ecca213a6cda3f6cfaa8cef=927b31222d8afd1e00a7f3e74f913865; path=/; HttpOnly; Secure; SameSite=None",
        "status": 200,
        "url": "https://kiali-istio-system.apps.ocp4.local/api/namespaces",
        "vary": "Accept-Encoding"
    }
}

TASK [Assert that we got no less than the minimum number of namespaces expected] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that we got no more than the maximum number of namespaces expected] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that we got the namespaces expected] ******************************
ok: [localhost] => (item=istio-system) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "istio-system",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-1) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-1",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-x) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-x",
    "msg": "All assertions passed"
}

TASK [Assert that we did not get namespaces that were not expected] ************
skipping: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/cluster-wide-access-test/set-istio-configmap-discovery-selectors.yml for localhost

TASK [fail] ********************************************************************
skipping: [localhost]

TASK [Get the Istio ConfigMap data.mesh configuration] *************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [fail] ********************************************************************
skipping: [localhost]

TASK [Setting discoverySelectors in Istio ConfigMap data.mesh] *****************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "data": {
-        "mesh": "accessLogFile: /dev/stdout\ndefaultConfig:\n  discoveryAddress: istiod.istio-system.svc:15012\n  tracing:\n    sampling: 100\n    zipkin:\n      address: zipkin.istio-system:9411\ndefaultProviders:\n  metrics:\n  - prometheus\nenableAutoMtls: true\nenablePrometheusMerge: true\nrootNamespace: istio-system\ntrustDomain: cluster.local\n"
+        "mesh": "accessLogFile: /dev/stdout\ndefaultConfig:\n  discoveryAddress: istiod.istio-system.svc:15012\n  tracing:\n    sampling: 100\n    zipkin:\n      address: zipkin.istio-system:9411\ndefaultProviders:\n  metrics:\n  - prometheus\ndiscoverySelectors:\n- matchLabels:\n    discoverySelectorLabel1: test\n- matchExpressions:\n  - key: discoverySelectorLabel2\n    operator: In\n    values:\n    - matchme\nenableAutoMtls: true\nenablePrometheusMerge: true\nrootNamespace: istio-system\ntrustDomain: cluster.local\n"
     },
     "metadata": {
         "managedFields": [
@@ -37,9 +37,9 @@
                 },
                 "manager": "OpenAPI-Generator",
                 "operation": "Update",
-                "time": "2024-03-24T06:49:31Z"
+                "time": "2024-03-25T06:40:58Z"
             }
         ],
-        "resourceVersion": "4642220"
+        "resourceVersion": "5130168"
     }
 }

changed: [localhost]

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "SET AN back to ** (but the server will only show us namespaces filtered by discoverySelectors)"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/set_accessible_namespaces_to_all.yml for localhost

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/cluster-wide-access-test/../common/../common/wait_for_kiali_cr_changes.yml for localhost

TASK [Wait for Kiali CR changes to take effect] ********************************
ok: [localhost]

TASK [Unset accessible namespace (defaults to ** behavior) in current Kiali CR] ***
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "metadata": {
-        "generation": 2,
+        "generation": 3,
         "managedFields": [
             {
                 "apiVersion": "kiali.io/v1alpha1",
@@ -29,7 +29,6 @@
                         },
                         "f:deployment": {
                             ".": {},
-                            "f:accessible_namespaces": {},
                             "f:cluster_wide_access": {},
                             "f:image_name": {},
                             "f:image_pull_policy": {},
@@ -99,14 +98,9 @@
                 "time": "2024-03-25T06:39:22Z"
             }
         ],
-        "resourceVersion": "5129591"
+        "resourceVersion": "5130207"
     },
     "spec": {
-        "deployment": {
-            "accessible_namespaces": [
-                "istio-system",
-                "cluster-wide-access-test-[1x]"
-            ]
-        }
+        "deployment": {}
     }
 }

changed: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_cr_changes.yml for localhost

TASK [Wait for Kiali CR changes to take effect] ********************************
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (360 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (359 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (358 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (357 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (356 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (355 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (354 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (353 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (352 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (351 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (350 retries left).
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_running.yml for localhost

TASK [Asserting that Kiali Pod exists and there is only one] *******************
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (360 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (359 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (358 retries left).
ok: [localhost]

TASK [Wait for Kiali to be running and accepting requests] *********************
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/tasks.yml for localhost

TASK [Get information about the cluster] ***************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Determine the cluster type] **********************************************
ok: [localhost]

TASK [Get Kiali CR if present] *************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Get Kiali Operator Pod] **************************************************
ok: [localhost]

TASK [Get Kiali Pod] ***********************************************************
ok: [localhost]

TASK [Get Kiali Configmap] *****************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Format Configmap] ********************************************************
ok: [localhost]

TASK [Get Kiali Deployment] ****************************************************
ok: [localhost]

TASK [Get Kiali Service] *******************************************************
ok: [localhost]

TASK [Get Kiali Route] *********************************************************
ok: [localhost]

TASK [Get Kiali Ingress] *******************************************************
skipping: [localhost]

TASK [Determine the Kiali Route URL on OpenShift] ******************************
ok: [localhost]

TASK [Determine the Kiali Ingress URL on minikube] *****************************
skipping: [localhost]

TASK [Determine the Kiali Ingress URL on kind] *********************************
skipping: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/pod_asserts.yml for localhost

TASK [Assert Kiali Pod is Running and there is only one] ***********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert Kiali Pod is Running on the correct Namespace] ********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/accessible_namespaces_contains.yml for localhost

TASK [Assert Accessible Namespaces contains ['**']] ****************************
ok: [localhost] => (item=**) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "**",
    "msg": "All assertions passed"
}

TASK [assert] ******************************************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "the server should only return AN namespaces with discoverySelectors also filtering the namespaces"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/assert-api-namespaces-result.yml for localhost

TASK [Call /namespaces API] ****************************************************
ok: [localhost]

TASK [Results of /namespaces API] **********************************************
ok: [localhost] => {
    "msg": {
        "changed": false,
        "connection": "close",
        "content": "[{\"name\":\"cluster-wide-access-test-1\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"discoverySelectorLabel1\":\"test\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-1\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c2\",\"openshift.io/sa.scc.supplemental-groups\":\"1000760000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000760000/10000\"}},{\"name\":\"cluster-wide-access-test-2\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"discoverySelectorLabel2\":\"matchme\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-2\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c7\",\"openshift.io/sa.scc.supplemental-groups\":\"1000770000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000770000/10000\"}},{\"name\":\"istio-system\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kubernetes.io/metadata.name\":\"istio-system\",\"pod-security.kubernetes.io/audit\":\"privileged\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"privileged\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\",\"topology.istio.io/network\":\"\"},\"annotations\":{\"openshift.io/description\":\"\",\"openshift.io/display-name\":\"\",\"openshift.io/requester\":\"kube:admin\",\"openshift.io/sa.scc.mcs\":\"s0:c26,c20\",\"openshift.io/sa.scc.supplemental-groups\":\"1000690000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000690000/10000\"}}]",
        "content_length": "1706",
        "content_type": "application/json",
        "cookies": {
            "d5b5278d6ecca213a6cda3f6cfaa8cef": "48d9ef3f4a3b71481ab0d0688ff03e71"
        },
        "cookies_string": "d5b5278d6ecca213a6cda3f6cfaa8cef=48d9ef3f4a3b71481ab0d0688ff03e71",
        "date": "Mon, 25 Mar 2024 06:43:17 GMT",
        "elapsed": 0,
        "failed": false,
        "json": [
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c2",
                    "openshift.io/sa.scc.supplemental-groups": "1000760000/10000",
                    "openshift.io/sa.scc.uid-range": "1000760000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "discoverySelectorLabel1": "test",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-1",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-1"
            },
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c7",
                    "openshift.io/sa.scc.supplemental-groups": "1000770000/10000",
                    "openshift.io/sa.scc.uid-range": "1000770000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "discoverySelectorLabel2": "matchme",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-2",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-2"
            },
            {
                "annotations": {
                    "openshift.io/description": "",
                    "openshift.io/display-name": "",
                    "openshift.io/requester": "kube:admin",
                    "openshift.io/sa.scc.mcs": "s0:c26,c20",
                    "openshift.io/sa.scc.supplemental-groups": "1000690000/10000",
                    "openshift.io/sa.scc.uid-range": "1000690000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kubernetes.io/metadata.name": "istio-system",
                    "pod-security.kubernetes.io/audit": "privileged",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "privileged",
                    "pod-security.kubernetes.io/warn-version": "v1.24",
                    "topology.istio.io/network": ""
                },
                "name": "istio-system"
            }
        ],
        "msg": "OK (1706 bytes)",
        "redirected": false,
        "set_cookie": "d5b5278d6ecca213a6cda3f6cfaa8cef=48d9ef3f4a3b71481ab0d0688ff03e71; path=/; HttpOnly; Secure; SameSite=None",
        "status": 200,
        "url": "https://kiali-istio-system.apps.ocp4.local/api/namespaces",
        "vary": "Accept-Encoding"
    }
}

TASK [Assert that we got no less than the minimum number of namespaces expected] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that we got no more than the maximum number of namespaces expected] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that we got the namespaces expected] ******************************
ok: [localhost] => (item=istio-system) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "istio-system",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-1) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-1",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-2) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-2",
    "msg": "All assertions passed"
}

TASK [Assert that we did not get namespaces that were not expected] ************
skipping: [localhost]

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "assert that we have clusterroles since we have been given cluster wide access"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/rw_clusterrole_asserts.yml for localhost

TASK [Get cluster roles] *******************************************************
ok: [localhost]

TASK [Assert that cluster roles exist] *****************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Get cluster role binding] ************************************************
ok: [localhost]

TASK [Assert the cluster role binding provides the read-write role] ************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/none_role_asserts.yml for localhost

TASK [Get roles] ***************************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert that namespaces do not have the roles] ****************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get viewer roles] ********************************************************
ok: [localhost] => (item=['istio-system', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali-viewer'])

TASK [Assert that namespaces do not have the viewer roles] *********************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get role bindings] *******************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert the role bindings do not exist] ***********************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "Turn off cluster wide access and set AN to [istio-system, cluster-wide-access-test-1, cluster-wide-access-test-2, cluster-wide-access-test-x]"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/set_kiali_cr.yml for localhost

TASK [Change Kiali CR with new Kiali CR] ***************************************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "metadata": {
-        "generation": 3,
+        "generation": 4,
         "managedFields": [
             {
                 "apiVersion": "kiali.io/v1alpha1",
@@ -16,41 +16,6 @@
                 "manager": "ansible-operator",
                 "operation": "Update",
                 "time": "2024-03-25T06:34:54Z"
-            },
-            {
-                "apiVersion": "kiali.io/v1alpha1",
-                "fieldsType": "FieldsV1",
-                "fieldsV1": {
-                    "f:spec": {
-                        ".": {},
-                        "f:auth": {
-                            ".": {},
-                            "f:strategy": {}
-                        },
-                        "f:deployment": {
-                            ".": {},
-                            "f:cluster_wide_access": {},
-                            "f:image_name": {},
-                            "f:image_pull_policy": {},
-                            "f:image_version": {},
-                            "f:ingress": {
-                                ".": {},
-                                "f:enabled": {}
-                            },
-                            "f:logger": {
-                                ".": {},
-                                "f:log_level": {}
-                            },
-                            "f:namespace": {},
-                            "f:service_type": {}
-                        },
-                        "f:istio_namespace": {},
-                        "f:version": {}
-                    }
-                },
-                "manager": "OpenAPI-Generator",
-                "operation": "Update",
-                "time": "2024-03-25T06:37:56Z"
             },
             {
                 "apiVersion": "kiali.io/v1alpha1",
@@ -96,13 +61,52 @@
                 "operation": "Update",
                 "subresource": "status",
                 "time": "2024-03-25T06:42:21Z"
+            },
+            {
+                "apiVersion": "kiali.io/v1alpha1",
+                "fieldsType": "FieldsV1",
+                "fieldsV1": {
+                    "f:spec": {
+                        ".": {},
+                        "f:auth": {
+                            ".": {},
+                            "f:strategy": {}
+                        },
+                        "f:deployment": {
+                            ".": {},
+                            "f:accessible_namespaces": {},
+                            "f:cluster_wide_access": {},
+                            "f:image_name": {},
+                            "f:image_pull_policy": {},
+                            "f:image_version": {},
+                            "f:ingress": {
+                                ".": {},
+                                "f:enabled": {}
+                            },
+                            "f:logger": {
+                                ".": {},
+                                "f:log_level": {}
+                            },
+                            "f:namespace": {},
+                            "f:service_type": {}
+                        },
+                        "f:istio_namespace": {},
+                        "f:version": {}
+                    }
+                },
+                "manager": "OpenAPI-Generator",
+                "operation": "Update",
+                "time": "2024-03-25T06:43:58Z"
             }
         ],
-        "resourceVersion": "5130629"
+        "resourceVersion": "5131166"
     },
     "spec": {
         "deployment": {
-            "cluster_wide_access": true
+            "accessible_namespaces": [
+                "cluster-wide-access-test-[12x]"
+            ],
+            "cluster_wide_access": false
         }
     }
 }

changed: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_cr_changes.yml for localhost

TASK [Wait for Kiali CR changes to take effect] ********************************
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (360 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (359 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (358 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (357 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (356 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (355 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (354 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (353 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (352 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (351 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (350 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (349 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (348 retries left).
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_running.yml for localhost

TASK [Asserting that Kiali Pod exists and there is only one] *******************
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (360 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (359 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (358 retries left).
ok: [localhost]

TASK [Wait for Kiali to be running and accepting requests] *********************
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/tasks.yml for localhost

TASK [Get information about the cluster] ***************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Determine the cluster type] **********************************************
ok: [localhost]

TASK [Get Kiali CR if present] *************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Get Kiali Operator Pod] **************************************************
ok: [localhost]

TASK [Get Kiali Pod] ***********************************************************
ok: [localhost]

TASK [Get Kiali Configmap] *****************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Format Configmap] ********************************************************
ok: [localhost]

TASK [Get Kiali Deployment] ****************************************************
ok: [localhost]

TASK [Get Kiali Service] *******************************************************
ok: [localhost]

TASK [Get Kiali Route] *********************************************************
ok: [localhost]

TASK [Get Kiali Ingress] *******************************************************
skipping: [localhost]

TASK [Determine the Kiali Route URL on OpenShift] ******************************
ok: [localhost]

TASK [Determine the Kiali Ingress URL on minikube] *****************************
skipping: [localhost]

TASK [Determine the Kiali Ingress URL on kind] *********************************
skipping: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/pod_asserts.yml for localhost

TASK [Assert Kiali Pod is Running and there is only one] ***********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert Kiali Pod is Running on the correct Namespace] ********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/accessible_namespaces_equals.yml for localhost

TASK [Assert Accessible Namespaces is ['istio-system', 'cluster-wide-access-test-1', 'cluster-wide-access-test-2', 'cluster-wide-access-test-x']] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [assert] ******************************************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "assert that we have roles since we have NOT been given cluster wide access"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/rw_role_asserts.yml for localhost

TASK [Get roles] ***************************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert that namespaces have the correct roles] ***************************
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'Role', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'istio-system', 'uid': 'd005dbb6-e8f7-45b5-aea6-f05e25b1a95e', 'resourceVersion': '5131555', 'creationTimestamp': '2024-03-25T06:45:06Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:45:06Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:rules': {}}}]}, 'rules': [{'verbs': ['get', 'list', 'watch'], 'apiGroups': [''], 'resources': ['configmaps', 'endpoints', 'pods/log']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': [''], 'resources': ['namespaces', 'pods', 'replicationcontrollers', 'services']}, {'verbs': ['create', 'post'], 'apiGroups': [''], 'resources': ['pods/portforward']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['extensions', 'apps'], 'resources': ['daemonsets', 'deployments', 'replicasets', 'statefulsets']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['batch'], 'resources': ['cronjobs', 'jobs']}, {'verbs': ['get', 'list', 'watch', 'create', 'delete', 'patch'], 'apiGroups': ['networking.istio.io', 'security.istio.io', 'extensions.istio.io', 'telemetry.istio.io', 'gateway.networking.k8s.io'], 'resources': ['*']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['apps.openshift.io'], 'resources': ['deploymentconfigs']}, {'verbs': ['get'], 'apiGroups': ['project.openshift.io'], 'resources': ['projects']}, {'verbs': ['get'], 'apiGroups': ['route.openshift.io'], 'resources': ['routes']}, {'verbs': ['create'], 'apiGroups': ['authentication.k8s.io'], 'resources': ['tokenreviews']}]}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:45:06Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:rules": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:45:06Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "istio-system",
                    "resourceVersion": "5131555",
                    "uid": "d005dbb6-e8f7-45b5-aea6-f05e25b1a95e"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "pods/log"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces",
                            "pods",
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/portforward"
                        ],
                        "verbs": [
                            "create",
                            "post"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions",
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.istio.io",
                            "security.istio.io",
                            "extensions.istio.io",
                            "telemetry.istio.io",
                            "gateway.networking.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "delete",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps.openshift.io"
                        ],
                        "resources": [
                            "deploymentconfigs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "project.openshift.io"
                        ],
                        "resources": [
                            "projects"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "route.openshift.io"
                        ],
                        "resources": [
                            "routes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'Role', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-1', 'uid': 'db4211b2-e169-413e-a502-429cc00bf70a', 'resourceVersion': '5131622', 'creationTimestamp': '2024-03-25T06:45:15Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:45:15Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:rules': {}}}]}, 'rules': [{'verbs': ['get', 'list', 'watch'], 'apiGroups': [''], 'resources': ['configmaps', 'endpoints', 'pods/log']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': [''], 'resources': ['namespaces', 'pods', 'replicationcontrollers', 'services']}, {'verbs': ['create', 'post'], 'apiGroups': [''], 'resources': ['pods/portforward']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['extensions', 'apps'], 'resources': ['daemonsets', 'deployments', 'replicasets', 'statefulsets']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['batch'], 'resources': ['cronjobs', 'jobs']}, {'verbs': ['get', 'list', 'watch', 'create', 'delete', 'patch'], 'apiGroups': ['networking.istio.io', 'security.istio.io', 'extensions.istio.io', 'telemetry.istio.io', 'gateway.networking.k8s.io'], 'resources': ['*']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['apps.openshift.io'], 'resources': ['deploymentconfigs']}, {'verbs': ['get'], 'apiGroups': ['project.openshift.io'], 'resources': ['projects']}, {'verbs': ['get'], 'apiGroups': ['route.openshift.io'], 'resources': ['routes']}, {'verbs': ['create'], 'apiGroups': ['authentication.k8s.io'], 'resources': ['tokenreviews']}]}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:45:15Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:rules": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:45:15Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-1",
                    "resourceVersion": "5131622",
                    "uid": "db4211b2-e169-413e-a502-429cc00bf70a"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "pods/log"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces",
                            "pods",
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/portforward"
                        ],
                        "verbs": [
                            "create",
                            "post"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions",
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.istio.io",
                            "security.istio.io",
                            "extensions.istio.io",
                            "telemetry.istio.io",
                            "gateway.networking.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "delete",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps.openshift.io"
                        ],
                        "resources": [
                            "deploymentconfigs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "project.openshift.io"
                        ],
                        "resources": [
                            "projects"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "route.openshift.io"
                        ],
                        "resources": [
                            "routes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'Role', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-2', 'uid': '891c07c5-0591-4488-919b-dde55d54d873', 'resourceVersion': '5131629', 'creationTimestamp': '2024-03-25T06:45:16Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:45:15Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:rules': {}}}]}, 'rules': [{'verbs': ['get', 'list', 'watch'], 'apiGroups': [''], 'resources': ['configmaps', 'endpoints', 'pods/log']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': [''], 'resources': ['namespaces', 'pods', 'replicationcontrollers', 'services']}, {'verbs': ['create', 'post'], 'apiGroups': [''], 'resources': ['pods/portforward']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['extensions', 'apps'], 'resources': ['daemonsets', 'deployments', 'replicasets', 'statefulsets']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['batch'], 'resources': ['cronjobs', 'jobs']}, {'verbs': ['get', 'list', 'watch', 'create', 'delete', 'patch'], 'apiGroups': ['networking.istio.io', 'security.istio.io', 'extensions.istio.io', 'telemetry.istio.io', 'gateway.networking.k8s.io'], 'resources': ['*']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['apps.openshift.io'], 'resources': ['deploymentconfigs']}, {'verbs': ['get'], 'apiGroups': ['project.openshift.io'], 'resources': ['projects']}, {'verbs': ['get'], 'apiGroups': ['route.openshift.io'], 'resources': ['routes']}, {'verbs': ['create'], 'apiGroups': ['authentication.k8s.io'], 'resources': ['tokenreviews']}]}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:45:16Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:rules": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:45:15Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-2",
                    "resourceVersion": "5131629",
                    "uid": "891c07c5-0591-4488-919b-dde55d54d873"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "pods/log"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces",
                            "pods",
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/portforward"
                        ],
                        "verbs": [
                            "create",
                            "post"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions",
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.istio.io",
                            "security.istio.io",
                            "extensions.istio.io",
                            "telemetry.istio.io",
                            "gateway.networking.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "delete",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps.openshift.io"
                        ],
                        "resources": [
                            "deploymentconfigs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "project.openshift.io"
                        ],
                        "resources": [
                            "projects"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "route.openshift.io"
                        ],
                        "resources": [
                            "routes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'Role', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-x', 'uid': '608a732f-d684-4203-b5d3-0f37b90d6329', 'resourceVersion': '5131633', 'creationTimestamp': '2024-03-25T06:45:16Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:45:16Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:rules': {}}}]}, 'rules': [{'verbs': ['get', 'list', 'watch'], 'apiGroups': [''], 'resources': ['configmaps', 'endpoints', 'pods/log']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': [''], 'resources': ['namespaces', 'pods', 'replicationcontrollers', 'services']}, {'verbs': ['create', 'post'], 'apiGroups': [''], 'resources': ['pods/portforward']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['extensions', 'apps'], 'resources': ['daemonsets', 'deployments', 'replicasets', 'statefulsets']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['batch'], 'resources': ['cronjobs', 'jobs']}, {'verbs': ['get', 'list', 'watch', 'create', 'delete', 'patch'], 'apiGroups': ['networking.istio.io', 'security.istio.io', 'extensions.istio.io', 'telemetry.istio.io', 'gateway.networking.k8s.io'], 'resources': ['*']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['apps.openshift.io'], 'resources': ['deploymentconfigs']}, {'verbs': ['get'], 'apiGroups': ['project.openshift.io'], 'resources': ['projects']}, {'verbs': ['get'], 'apiGroups': ['route.openshift.io'], 'resources': ['routes']}, {'verbs': ['create'], 'apiGroups': ['authentication.k8s.io'], 'resources': ['tokenreviews']}]}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:45:16Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:rules": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:45:16Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-x",
                    "resourceVersion": "5131633",
                    "uid": "608a732f-d684-4203-b5d3-0f37b90d6329"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "pods/log"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces",
                            "pods",
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/portforward"
                        ],
                        "verbs": [
                            "create",
                            "post"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions",
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.istio.io",
                            "security.istio.io",
                            "extensions.istio.io",
                            "telemetry.istio.io",
                            "gateway.networking.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "delete",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps.openshift.io"
                        ],
                        "resources": [
                            "deploymentconfigs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "project.openshift.io"
                        ],
                        "resources": [
                            "projects"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "route.openshift.io"
                        ],
                        "resources": [
                            "routes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}

TASK [Get role binding] ********************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert the role binding provides the read-write role] ********************
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'RoleBinding', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'istio-system', 'uid': 'b59158df-8844-48eb-b145-b67411301712', 'resourceVersion': '5131556', 'creationTimestamp': '2024-03-25T06:45:07Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:45:06Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:roleRef': {}, 'f:subjects': {}}}]}, 'subjects': [{'kind': 'ServiceAccount', 'name': 'kiali-service-account', 'namespace': 'istio-system'}], 'roleRef': {'apiGroup': 'rbac.authorization.k8s.io', 'kind': 'Role', 'name': 'kiali'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:45:07Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:roleRef": {},
                                "f:subjects": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:45:06Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "istio-system",
                    "resourceVersion": "5131556",
                    "uid": "b59158df-8844-48eb-b145-b67411301712"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "kiali"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kiali-service-account",
                        "namespace": "istio-system"
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'RoleBinding', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-1', 'uid': '425293b6-af13-4f81-8821-d8ff463efb8d', 'resourceVersion': '5131638', 'creationTimestamp': '2024-03-25T06:45:17Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:45:16Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:roleRef': {}, 'f:subjects': {}}}]}, 'subjects': [{'kind': 'ServiceAccount', 'name': 'kiali-service-account', 'namespace': 'istio-system'}], 'roleRef': {'apiGroup': 'rbac.authorization.k8s.io', 'kind': 'Role', 'name': 'kiali'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:45:17Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:roleRef": {},
                                "f:subjects": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:45:16Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-1",
                    "resourceVersion": "5131638",
                    "uid": "425293b6-af13-4f81-8821-d8ff463efb8d"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "kiali"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kiali-service-account",
                        "namespace": "istio-system"
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'RoleBinding', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-2', 'uid': '1014860f-f53a-42da-a978-cd441ad8f17c', 'resourceVersion': '5131641', 'creationTimestamp': '2024-03-25T06:45:17Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:45:17Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:roleRef': {}, 'f:subjects': {}}}]}, 'subjects': [{'kind': 'ServiceAccount', 'name': 'kiali-service-account', 'namespace': 'istio-system'}], 'roleRef': {'apiGroup': 'rbac.authorization.k8s.io', 'kind': 'Role', 'name': 'kiali'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:45:17Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:roleRef": {},
                                "f:subjects": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:45:17Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-2",
                    "resourceVersion": "5131641",
                    "uid": "1014860f-f53a-42da-a978-cd441ad8f17c"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "kiali"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kiali-service-account",
                        "namespace": "istio-system"
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'RoleBinding', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-x', 'uid': '17407be7-eb5b-4867-ba9a-72f87ed592a0', 'resourceVersion': '5131643', 'creationTimestamp': '2024-03-25T06:45:17Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:45:17Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:roleRef': {}, 'f:subjects': {}}}]}, 'subjects': [{'kind': 'ServiceAccount', 'name': 'kiali-service-account', 'namespace': 'istio-system'}], 'roleRef': {'apiGroup': 'rbac.authorization.k8s.io', 'kind': 'Role', 'name': 'kiali'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:45:17Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:roleRef": {},
                                "f:subjects": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:45:17Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-x",
                    "resourceVersion": "5131643",
                    "uid": "17407be7-eb5b-4867-ba9a-72f87ed592a0"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "kiali"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kiali-service-account",
                        "namespace": "istio-system"
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/none_clusterrole_asserts.yml for localhost

TASK [Get cluster roles] *******************************************************
ok: [localhost]

TASK [Get viewer cluster roles] ************************************************
ok: [localhost]

TASK [Assert that no cluster roles exist] **************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that no viewer cluster roles exist] *******************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Get cluster role binding] ************************************************
ok: [localhost]

TASK [Assert that no cluster role binding exists] ******************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "the server should only return those namespaces filtered by the discoverySelectors - the roles still let us see them"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/assert-api-namespaces-result.yml for localhost

TASK [Call /namespaces API] ****************************************************
ok: [localhost]

TASK [Results of /namespaces API] **********************************************
ok: [localhost] => {
    "msg": {
        "changed": false,
        "connection": "close",
        "content": "[{\"name\":\"cluster-wide-access-test-1\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"discoverySelectorLabel1\":\"test\",\"kiali.io/member-of\":\"istio-system\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-1\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c2\",\"openshift.io/sa.scc.supplemental-groups\":\"1000760000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000760000/10000\"}},{\"name\":\"cluster-wide-access-test-2\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"discoverySelectorLabel2\":\"matchme\",\"kiali.io/member-of\":\"istio-system\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-2\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c7\",\"openshift.io/sa.scc.supplemental-groups\":\"1000770000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000770000/10000\"}},{\"name\":\"istio-system\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kiali.io/member-of\":\"istio-system\",\"kubernetes.io/metadata.name\":\"istio-system\",\"pod-security.kubernetes.io/audit\":\"privileged\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"privileged\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\",\"topology.istio.io/network\":\"\"},\"annotations\":{\"openshift.io/description\":\"\",\"openshift.io/display-name\":\"\",\"openshift.io/requester\":\"kube:admin\",\"openshift.io/sa.scc.mcs\":\"s0:c26,c20\",\"openshift.io/sa.scc.supplemental-groups\":\"1000690000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000690000/10000\"}}]",
        "content_length": "1814",
        "content_type": "application/json",
        "cookies": {
            "d5b5278d6ecca213a6cda3f6cfaa8cef": "cf75c72b8a3e53f477b8c2e2f5b5a3cd"
        },
        "cookies_string": "d5b5278d6ecca213a6cda3f6cfaa8cef=cf75c72b8a3e53f477b8c2e2f5b5a3cd",
        "date": "Mon, 25 Mar 2024 06:47:02 GMT",
        "elapsed": 0,
        "failed": false,
        "json": [
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c2",
                    "openshift.io/sa.scc.supplemental-groups": "1000760000/10000",
                    "openshift.io/sa.scc.uid-range": "1000760000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "discoverySelectorLabel1": "test",
                    "kiali.io/member-of": "istio-system",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-1",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-1"
            },
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c7",
                    "openshift.io/sa.scc.supplemental-groups": "1000770000/10000",
                    "openshift.io/sa.scc.uid-range": "1000770000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "discoverySelectorLabel2": "matchme",
                    "kiali.io/member-of": "istio-system",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-2",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-2"
            },
            {
                "annotations": {
                    "openshift.io/description": "",
                    "openshift.io/display-name": "",
                    "openshift.io/requester": "kube:admin",
                    "openshift.io/sa.scc.mcs": "s0:c26,c20",
                    "openshift.io/sa.scc.supplemental-groups": "1000690000/10000",
                    "openshift.io/sa.scc.uid-range": "1000690000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kiali.io/member-of": "istio-system",
                    "kubernetes.io/metadata.name": "istio-system",
                    "pod-security.kubernetes.io/audit": "privileged",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "privileged",
                    "pod-security.kubernetes.io/warn-version": "v1.24",
                    "topology.istio.io/network": ""
                },
                "name": "istio-system"
            }
        ],
        "msg": "OK (1814 bytes)",
        "redirected": false,
        "set_cookie": "d5b5278d6ecca213a6cda3f6cfaa8cef=cf75c72b8a3e53f477b8c2e2f5b5a3cd; path=/; HttpOnly; Secure; SameSite=None",
        "status": 200,
        "url": "https://kiali-istio-system.apps.ocp4.local/api/namespaces",
        "vary": "Accept-Encoding"
    }
}

TASK [Assert that we got no less than the minimum number of namespaces expected] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that we got no more than the maximum number of namespaces expected] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that we got the namespaces expected] ******************************
ok: [localhost] => (item=istio-system) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "istio-system",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-1) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-1",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-2) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-2",
    "msg": "All assertions passed"
}

TASK [Assert that we did not get namespaces that were not expected] ************
skipping: [localhost]

TASK [Remove the discovery selectors] ******************************************
included: /tmp/molecule/operator/molecule/cluster-wide-access-test/set-istio-configmap-discovery-selectors.yml for localhost

TASK [fail] ********************************************************************
skipping: [localhost]

TASK [Get the Istio ConfigMap data.mesh configuration] *************************
skipping: [localhost]

TASK [fail] ********************************************************************
skipping: [localhost]

TASK [Setting discoverySelectors in Istio ConfigMap data.mesh] *****************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "data": {
-        "mesh": "accessLogFile: /dev/stdout\ndefaultConfig:\n  discoveryAddress: istiod.istio-system.svc:15012\n  tracing:\n    sampling: 100\n    zipkin:\n      address: zipkin.istio-system:9411\ndefaultProviders:\n  metrics:\n  - prometheus\ndiscoverySelectors:\n- matchLabels:\n    discoverySelectorLabel1: test\n- matchExpressions:\n  - key: discoverySelectorLabel2\n    operator: In\n    values:\n    - matchme\nenableAutoMtls: true\nenablePrometheusMerge: true\nrootNamespace: istio-system\ntrustDomain: cluster.local\n"
+        "mesh": "accessLogFile: /dev/stdout\ndefaultConfig:\n  discoveryAddress: istiod.istio-system.svc:15012\n  tracing:\n    sampling: 100\n    zipkin:\n      address: zipkin.istio-system:9411\ndefaultProviders:\n  metrics:\n  - prometheus\nenableAutoMtls: true\nenablePrometheusMerge: true\nrootNamespace: istio-system\ntrustDomain: cluster.local\n"
     },
     "metadata": {
         "managedFields": [
@@ -37,9 +37,9 @@
                 },
                 "manager": "OpenAPI-Generator",
                 "operation": "Update",
-                "time": "2024-03-25T06:40:58Z"
+                "time": "2024-03-25T06:47:06Z"
             }
         ],
-        "resourceVersion": "5130168"
+        "resourceVersion": "5132289"
     }
 }

changed: [localhost]

TASK [Pause for a few seconds to ensure the server gets notified of the change to the Istio ConfigMap] ***
Pausing for 25 seconds
ok: [localhost]

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "Now that we do not have discoverySelectors, we should see all AN namespaces (istio-system, cluster-wide-access-test-1, cluster-wide-access-test-2, cluster-wide-access-test-x)"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/assert-api-namespaces-result.yml for localhost

TASK [Call /namespaces API] ****************************************************
ok: [localhost]

TASK [Results of /namespaces API] **********************************************
ok: [localhost] => {
    "msg": {
        "changed": false,
        "connection": "close",
        "content": "[{\"name\":\"cluster-wide-access-test-1\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"discoverySelectorLabel1\":\"test\",\"kiali.io/member-of\":\"istio-system\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-1\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c2\",\"openshift.io/sa.scc.supplemental-groups\":\"1000760000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000760000/10000\"}},{\"name\":\"cluster-wide-access-test-2\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"discoverySelectorLabel2\":\"matchme\",\"kiali.io/member-of\":\"istio-system\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-2\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c7\",\"openshift.io/sa.scc.supplemental-groups\":\"1000770000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000770000/10000\"}},{\"name\":\"cluster-wide-access-test-x\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kiali.io/member-of\":\"istio-system\",\"kubernetes.io/metadata.name\":\"cluster-wide-access-test-x\",\"pod-security.kubernetes.io/audit\":\"restricted\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"restricted\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\"},\"annotations\":{\"openshift.io/sa.scc.mcs\":\"s0:c28,c12\",\"openshift.io/sa.scc.supplemental-groups\":\"1000780000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000780000/10000\"}},{\"name\":\"istio-system\",\"cluster\":\"Kubernetes\",\"isAmbient\":false,\"labels\":{\"kiali.io/member-of\":\"istio-system\",\"kubernetes.io/metadata.name\":\"istio-system\",\"pod-security.kubernetes.io/audit\":\"privileged\",\"pod-security.kubernetes.io/audit-version\":\"v1.24\",\"pod-security.kubernetes.io/warn\":\"privileged\",\"pod-security.kubernetes.io/warn-version\":\"v1.24\",\"topology.istio.io/network\":\"\"},\"annotations\":{\"openshift.io/description\":\"\",\"openshift.io/display-name\":\"\",\"openshift.io/requester\":\"kube:admin\",\"openshift.io/sa.scc.mcs\":\"s0:c26,c20\",\"openshift.io/sa.scc.supplemental-groups\":\"1000690000/10000\",\"openshift.io/sa.scc.uid-range\":\"1000690000/10000\"}}]",
        "content_type": "application/json",
        "cookies": {
            "d5b5278d6ecca213a6cda3f6cfaa8cef": "cf75c72b8a3e53f477b8c2e2f5b5a3cd"
        },
        "cookies_string": "d5b5278d6ecca213a6cda3f6cfaa8cef=cf75c72b8a3e53f477b8c2e2f5b5a3cd",
        "date": "Mon, 25 Mar 2024 06:47:33 GMT",
        "elapsed": 0,
        "failed": false,
        "json": [
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c2",
                    "openshift.io/sa.scc.supplemental-groups": "1000760000/10000",
                    "openshift.io/sa.scc.uid-range": "1000760000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "discoverySelectorLabel1": "test",
                    "kiali.io/member-of": "istio-system",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-1",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-1"
            },
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c7",
                    "openshift.io/sa.scc.supplemental-groups": "1000770000/10000",
                    "openshift.io/sa.scc.uid-range": "1000770000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "discoverySelectorLabel2": "matchme",
                    "kiali.io/member-of": "istio-system",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-2",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-2"
            },
            {
                "annotations": {
                    "openshift.io/sa.scc.mcs": "s0:c28,c12",
                    "openshift.io/sa.scc.supplemental-groups": "1000780000/10000",
                    "openshift.io/sa.scc.uid-range": "1000780000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kiali.io/member-of": "istio-system",
                    "kubernetes.io/metadata.name": "cluster-wide-access-test-x",
                    "pod-security.kubernetes.io/audit": "restricted",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "restricted",
                    "pod-security.kubernetes.io/warn-version": "v1.24"
                },
                "name": "cluster-wide-access-test-x"
            },
            {
                "annotations": {
                    "openshift.io/description": "",
                    "openshift.io/display-name": "",
                    "openshift.io/requester": "kube:admin",
                    "openshift.io/sa.scc.mcs": "s0:c26,c20",
                    "openshift.io/sa.scc.supplemental-groups": "1000690000/10000",
                    "openshift.io/sa.scc.uid-range": "1000690000/10000"
                },
                "cluster": "Kubernetes",
                "isAmbient": false,
                "labels": {
                    "kiali.io/member-of": "istio-system",
                    "kubernetes.io/metadata.name": "istio-system",
                    "pod-security.kubernetes.io/audit": "privileged",
                    "pod-security.kubernetes.io/audit-version": "v1.24",
                    "pod-security.kubernetes.io/warn": "privileged",
                    "pod-security.kubernetes.io/warn-version": "v1.24",
                    "topology.istio.io/network": ""
                },
                "name": "istio-system"
            }
        ],
        "msg": "OK (unknown bytes)",
        "redirected": false,
        "set_cookie": "d5b5278d6ecca213a6cda3f6cfaa8cef=cf75c72b8a3e53f477b8c2e2f5b5a3cd; path=/; HttpOnly; Secure; SameSite=None",
        "status": 200,
        "transfer_encoding": "chunked",
        "url": "https://kiali-istio-system.apps.ocp4.local/api/namespaces",
        "vary": "Accept-Encoding"
    }
}

TASK [Assert that we got no less than the minimum number of namespaces expected] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that we got no more than the maximum number of namespaces expected] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that we got the namespaces expected] ******************************
ok: [localhost] => (item=istio-system) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "istio-system",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-1) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-1",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-2) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-2",
    "msg": "All assertions passed"
}
ok: [localhost] => (item=cluster-wide-access-test-x) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "cluster-wide-access-test-x",
    "msg": "All assertions passed"
}

TASK [Assert that we did not get namespaces that were not expected] ************
skipping: [localhost]

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "We have AN=list and CWA=false. Now let's set CWA=true and see the roles get removed and cluster roles added"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/set_kiali_cr.yml for localhost

TASK [Change Kiali CR with new Kiali CR] ***************************************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "metadata": {
-        "generation": 4,
+        "generation": 5,
         "managedFields": [
             {
                 "apiVersion": "kiali.io/v1alpha1",
@@ -16,42 +16,6 @@
                 "manager": "ansible-operator",
                 "operation": "Update",
                 "time": "2024-03-25T06:34:54Z"
-            },
-            {
-                "apiVersion": "kiali.io/v1alpha1",
-                "fieldsType": "FieldsV1",
-                "fieldsV1": {
-                    "f:spec": {
-                        ".": {},
-                        "f:auth": {
-                            ".": {},
-                            "f:strategy": {}
-                        },
-                        "f:deployment": {
-                            ".": {},
-                            "f:accessible_namespaces": {},
-                            "f:cluster_wide_access": {},
-                            "f:image_name": {},
-                            "f:image_pull_policy": {},
-                            "f:image_version": {},
-                            "f:ingress": {
-                                ".": {},
-                                "f:enabled": {}
-                            },
-                            "f:logger": {
-                                ".": {},
-                                "f:log_level": {}
-                            },
-                            "f:namespace": {},
-                            "f:service_type": {}
-                        },
-                        "f:istio_namespace": {},
-                        "f:version": {}
-                    }
-                },
-                "manager": "OpenAPI-Generator",
-                "operation": "Update",
-                "time": "2024-03-25T06:43:58Z"
             },
             {
                 "apiVersion": "kiali.io/v1alpha1",
@@ -97,13 +61,49 @@
                 "operation": "Update",
                 "subresource": "status",
                 "time": "2024-03-25T06:45:33Z"
+            },
+            {
+                "apiVersion": "kiali.io/v1alpha1",
+                "fieldsType": "FieldsV1",
+                "fieldsV1": {
+                    "f:spec": {
+                        ".": {},
+                        "f:auth": {
+                            ".": {},
+                            "f:strategy": {}
+                        },
+                        "f:deployment": {
+                            ".": {},
+                            "f:accessible_namespaces": {},
+                            "f:cluster_wide_access": {},
+                            "f:image_name": {},
+                            "f:image_pull_policy": {},
+                            "f:image_version": {},
+                            "f:ingress": {
+                                ".": {},
+                                "f:enabled": {}
+                            },
+                            "f:logger": {
+                                ".": {},
+                                "f:log_level": {}
+                            },
+                            "f:namespace": {},
+                            "f:service_type": {}
+                        },
+                        "f:istio_namespace": {},
+                        "f:version": {}
+                    }
+                },
+                "manager": "OpenAPI-Generator",
+                "operation": "Update",
+                "time": "2024-03-25T06:47:38Z"
             }
         ],
-        "resourceVersion": "5131757"
+        "resourceVersion": "5132420"
     },
     "spec": {
         "deployment": {
-            "cluster_wide_access": false
+            "cluster_wide_access": true
         }
     }
 }

changed: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_cr_changes.yml for localhost

TASK [Wait for Kiali CR changes to take effect] ********************************
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (360 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (359 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (358 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (357 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (356 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (355 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (354 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (353 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (352 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (351 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (350 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (349 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (348 retries left).
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_running.yml for localhost

TASK [Asserting that Kiali Pod exists and there is only one] *******************
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (360 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (359 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (358 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (357 retries left).
ok: [localhost]

TASK [Wait for Kiali to be running and accepting requests] *********************
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/tasks.yml for localhost

TASK [Get information about the cluster] ***************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Determine the cluster type] **********************************************
ok: [localhost]

TASK [Get Kiali CR if present] *************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Get Kiali Operator Pod] **************************************************
ok: [localhost]

TASK [Get Kiali Pod] ***********************************************************
ok: [localhost]

TASK [Get Kiali Configmap] *****************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Format Configmap] ********************************************************
ok: [localhost]

TASK [Get Kiali Deployment] ****************************************************
ok: [localhost]

TASK [Get Kiali Service] *******************************************************
ok: [localhost]

TASK [Get Kiali Route] *********************************************************
ok: [localhost]

TASK [Get Kiali Ingress] *******************************************************
skipping: [localhost]

TASK [Determine the Kiali Route URL on OpenShift] ******************************
ok: [localhost]

TASK [Determine the Kiali Ingress URL on minikube] *****************************
skipping: [localhost]

TASK [Determine the Kiali Ingress URL on kind] *********************************
skipping: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/pod_asserts.yml for localhost

TASK [Assert Kiali Pod is Running and there is only one] ***********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert Kiali Pod is Running on the correct Namespace] ********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/rw_clusterrole_asserts.yml for localhost

TASK [Get cluster roles] *******************************************************
ok: [localhost]

TASK [Assert that cluster roles exist] *****************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Get cluster role binding] ************************************************
ok: [localhost]

TASK [Assert the cluster role binding provides the read-write role] ************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/none_role_asserts.yml for localhost

TASK [Get roles] ***************************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert that namespaces do not have the roles] ****************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get viewer roles] ********************************************************
ok: [localhost] => (item=['istio-system', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali-viewer'])

TASK [Assert that namespaces do not have the viewer roles] *********************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get role bindings] *******************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert the role bindings do not exist] ***********************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "We have AN=list and CWA=true. Now let's set CWA back to false and see the roles get added and cluster roles removed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/set_kiali_cr.yml for localhost

TASK [Change Kiali CR with new Kiali CR] ***************************************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "metadata": {
-        "generation": 5,
+        "generation": 6,
         "managedFields": [
             {
                 "apiVersion": "kiali.io/v1alpha1",
@@ -16,42 +16,6 @@
                 "manager": "ansible-operator",
                 "operation": "Update",
                 "time": "2024-03-25T06:34:54Z"
-            },
-            {
-                "apiVersion": "kiali.io/v1alpha1",
-                "fieldsType": "FieldsV1",
-                "fieldsV1": {
-                    "f:spec": {
-                        ".": {},
-                        "f:auth": {
-                            ".": {},
-                            "f:strategy": {}
-                        },
-                        "f:deployment": {
-                            ".": {},
-                            "f:accessible_namespaces": {},
-                            "f:cluster_wide_access": {},
-                            "f:image_name": {},
-                            "f:image_pull_policy": {},
-                            "f:image_version": {},
-                            "f:ingress": {
-                                ".": {},
-                                "f:enabled": {}
-                            },
-                            "f:logger": {
-                                ".": {},
-                                "f:log_level": {}
-                            },
-                            "f:namespace": {},
-                            "f:service_type": {}
-                        },
-                        "f:istio_namespace": {},
-                        "f:version": {}
-                    }
-                },
-                "manager": "OpenAPI-Generator",
-                "operation": "Update",
-                "time": "2024-03-25T06:47:38Z"
             },
             {
                 "apiVersion": "kiali.io/v1alpha1",
@@ -97,13 +61,49 @@
                 "operation": "Update",
                 "subresource": "status",
                 "time": "2024-03-25T06:49:18Z"
+            },
+            {
+                "apiVersion": "kiali.io/v1alpha1",
+                "fieldsType": "FieldsV1",
+                "fieldsV1": {
+                    "f:spec": {
+                        ".": {},
+                        "f:auth": {
+                            ".": {},
+                            "f:strategy": {}
+                        },
+                        "f:deployment": {
+                            ".": {},
+                            "f:accessible_namespaces": {},
+                            "f:cluster_wide_access": {},
+                            "f:image_name": {},
+                            "f:image_pull_policy": {},
+                            "f:image_version": {},
+                            "f:ingress": {
+                                ".": {},
+                                "f:enabled": {}
+                            },
+                            "f:logger": {
+                                ".": {},
+                                "f:log_level": {}
+                            },
+                            "f:namespace": {},
+                            "f:service_type": {}
+                        },
+                        "f:istio_namespace": {},
+                        "f:version": {}
+                    }
+                },
+                "manager": "OpenAPI-Generator",
+                "operation": "Update",
+                "time": "2024-03-25T06:51:00Z"
             }
         ],
-        "resourceVersion": "5133084"
+        "resourceVersion": "5133680"
     },
     "spec": {
         "deployment": {
-            "cluster_wide_access": true
+            "cluster_wide_access": false
         }
     }
 }

changed: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_cr_changes.yml for localhost

TASK [Wait for Kiali CR changes to take effect] ********************************
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (360 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (359 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (358 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (357 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (356 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (355 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (354 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (353 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (352 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (351 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (350 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (349 retries left).
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_running.yml for localhost

TASK [Asserting that Kiali Pod exists and there is only one] *******************
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (360 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (359 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (358 retries left).
ok: [localhost]

TASK [Wait for Kiali to be running and accepting requests] *********************
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/tasks.yml for localhost

TASK [Get information about the cluster] ***************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Determine the cluster type] **********************************************
ok: [localhost]

TASK [Get Kiali CR if present] *************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Get Kiali Operator Pod] **************************************************
ok: [localhost]

TASK [Get Kiali Pod] ***********************************************************
ok: [localhost]

TASK [Get Kiali Configmap] *****************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Format Configmap] ********************************************************
ok: [localhost]

TASK [Get Kiali Deployment] ****************************************************
ok: [localhost]

TASK [Get Kiali Service] *******************************************************
ok: [localhost]

TASK [Get Kiali Route] *********************************************************
ok: [localhost]

TASK [Get Kiali Ingress] *******************************************************
skipping: [localhost]

TASK [Determine the Kiali Route URL on OpenShift] ******************************
ok: [localhost]

TASK [Determine the Kiali Ingress URL on minikube] *****************************
skipping: [localhost]

TASK [Determine the Kiali Ingress URL on kind] *********************************
skipping: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/pod_asserts.yml for localhost

TASK [Assert Kiali Pod is Running and there is only one] ***********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert Kiali Pod is Running on the correct Namespace] ********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/rw_role_asserts.yml for localhost

TASK [Get roles] ***************************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert that namespaces have the correct roles] ***************************
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'Role', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'istio-system', 'uid': '2d212f86-40ae-4944-827f-043ccde393cb', 'resourceVersion': '5134023', 'creationTimestamp': '2024-03-25T06:52:05Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:52:05Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:rules': {}}}]}, 'rules': [{'verbs': ['get', 'list', 'watch'], 'apiGroups': [''], 'resources': ['configmaps', 'endpoints', 'pods/log']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': [''], 'resources': ['namespaces', 'pods', 'replicationcontrollers', 'services']}, {'verbs': ['create', 'post'], 'apiGroups': [''], 'resources': ['pods/portforward']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['extensions', 'apps'], 'resources': ['daemonsets', 'deployments', 'replicasets', 'statefulsets']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['batch'], 'resources': ['cronjobs', 'jobs']}, {'verbs': ['get', 'list', 'watch', 'create', 'delete', 'patch'], 'apiGroups': ['networking.istio.io', 'security.istio.io', 'extensions.istio.io', 'telemetry.istio.io', 'gateway.networking.k8s.io'], 'resources': ['*']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['apps.openshift.io'], 'resources': ['deploymentconfigs']}, {'verbs': ['get'], 'apiGroups': ['project.openshift.io'], 'resources': ['projects']}, {'verbs': ['get'], 'apiGroups': ['route.openshift.io'], 'resources': ['routes']}, {'verbs': ['create'], 'apiGroups': ['authentication.k8s.io'], 'resources': ['tokenreviews']}]}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:52:05Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:rules": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:52:05Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "istio-system",
                    "resourceVersion": "5134023",
                    "uid": "2d212f86-40ae-4944-827f-043ccde393cb"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "pods/log"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces",
                            "pods",
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/portforward"
                        ],
                        "verbs": [
                            "create",
                            "post"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions",
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.istio.io",
                            "security.istio.io",
                            "extensions.istio.io",
                            "telemetry.istio.io",
                            "gateway.networking.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "delete",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps.openshift.io"
                        ],
                        "resources": [
                            "deploymentconfigs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "project.openshift.io"
                        ],
                        "resources": [
                            "projects"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "route.openshift.io"
                        ],
                        "resources": [
                            "routes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'Role', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-1', 'uid': '025a7388-3a16-41d4-be4d-c675b7426992', 'resourceVersion': '5134068', 'creationTimestamp': '2024-03-25T06:52:13Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:52:13Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:rules': {}}}]}, 'rules': [{'verbs': ['get', 'list', 'watch'], 'apiGroups': [''], 'resources': ['configmaps', 'endpoints', 'pods/log']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': [''], 'resources': ['namespaces', 'pods', 'replicationcontrollers', 'services']}, {'verbs': ['create', 'post'], 'apiGroups': [''], 'resources': ['pods/portforward']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['extensions', 'apps'], 'resources': ['daemonsets', 'deployments', 'replicasets', 'statefulsets']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['batch'], 'resources': ['cronjobs', 'jobs']}, {'verbs': ['get', 'list', 'watch', 'create', 'delete', 'patch'], 'apiGroups': ['networking.istio.io', 'security.istio.io', 'extensions.istio.io', 'telemetry.istio.io', 'gateway.networking.k8s.io'], 'resources': ['*']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['apps.openshift.io'], 'resources': ['deploymentconfigs']}, {'verbs': ['get'], 'apiGroups': ['project.openshift.io'], 'resources': ['projects']}, {'verbs': ['get'], 'apiGroups': ['route.openshift.io'], 'resources': ['routes']}, {'verbs': ['create'], 'apiGroups': ['authentication.k8s.io'], 'resources': ['tokenreviews']}]}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:52:13Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:rules": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:52:13Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-1",
                    "resourceVersion": "5134068",
                    "uid": "025a7388-3a16-41d4-be4d-c675b7426992"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "pods/log"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces",
                            "pods",
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/portforward"
                        ],
                        "verbs": [
                            "create",
                            "post"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions",
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.istio.io",
                            "security.istio.io",
                            "extensions.istio.io",
                            "telemetry.istio.io",
                            "gateway.networking.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "delete",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps.openshift.io"
                        ],
                        "resources": [
                            "deploymentconfigs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "project.openshift.io"
                        ],
                        "resources": [
                            "projects"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "route.openshift.io"
                        ],
                        "resources": [
                            "routes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'Role', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-2', 'uid': 'cca17a39-b322-4f25-a722-51dafa4441b4', 'resourceVersion': '5134069', 'creationTimestamp': '2024-03-25T06:52:14Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:52:14Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:rules': {}}}]}, 'rules': [{'verbs': ['get', 'list', 'watch'], 'apiGroups': [''], 'resources': ['configmaps', 'endpoints', 'pods/log']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': [''], 'resources': ['namespaces', 'pods', 'replicationcontrollers', 'services']}, {'verbs': ['create', 'post'], 'apiGroups': [''], 'resources': ['pods/portforward']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['extensions', 'apps'], 'resources': ['daemonsets', 'deployments', 'replicasets', 'statefulsets']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['batch'], 'resources': ['cronjobs', 'jobs']}, {'verbs': ['get', 'list', 'watch', 'create', 'delete', 'patch'], 'apiGroups': ['networking.istio.io', 'security.istio.io', 'extensions.istio.io', 'telemetry.istio.io', 'gateway.networking.k8s.io'], 'resources': ['*']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['apps.openshift.io'], 'resources': ['deploymentconfigs']}, {'verbs': ['get'], 'apiGroups': ['project.openshift.io'], 'resources': ['projects']}, {'verbs': ['get'], 'apiGroups': ['route.openshift.io'], 'resources': ['routes']}, {'verbs': ['create'], 'apiGroups': ['authentication.k8s.io'], 'resources': ['tokenreviews']}]}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:52:14Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:rules": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:52:14Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-2",
                    "resourceVersion": "5134069",
                    "uid": "cca17a39-b322-4f25-a722-51dafa4441b4"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "pods/log"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces",
                            "pods",
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/portforward"
                        ],
                        "verbs": [
                            "create",
                            "post"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions",
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.istio.io",
                            "security.istio.io",
                            "extensions.istio.io",
                            "telemetry.istio.io",
                            "gateway.networking.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "delete",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps.openshift.io"
                        ],
                        "resources": [
                            "deploymentconfigs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "project.openshift.io"
                        ],
                        "resources": [
                            "projects"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "route.openshift.io"
                        ],
                        "resources": [
                            "routes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'Role', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-x', 'uid': '59a9a6b1-7142-4fd0-9082-683a7dd6fcae', 'resourceVersion': '5134073', 'creationTimestamp': '2024-03-25T06:52:14Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:52:14Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:rules': {}}}]}, 'rules': [{'verbs': ['get', 'list', 'watch'], 'apiGroups': [''], 'resources': ['configmaps', 'endpoints', 'pods/log']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': [''], 'resources': ['namespaces', 'pods', 'replicationcontrollers', 'services']}, {'verbs': ['create', 'post'], 'apiGroups': [''], 'resources': ['pods/portforward']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['extensions', 'apps'], 'resources': ['daemonsets', 'deployments', 'replicasets', 'statefulsets']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['batch'], 'resources': ['cronjobs', 'jobs']}, {'verbs': ['get', 'list', 'watch', 'create', 'delete', 'patch'], 'apiGroups': ['networking.istio.io', 'security.istio.io', 'extensions.istio.io', 'telemetry.istio.io', 'gateway.networking.k8s.io'], 'resources': ['*']}, {'verbs': ['get', 'list', 'watch', 'patch'], 'apiGroups': ['apps.openshift.io'], 'resources': ['deploymentconfigs']}, {'verbs': ['get'], 'apiGroups': ['project.openshift.io'], 'resources': ['projects']}, {'verbs': ['get'], 'apiGroups': ['route.openshift.io'], 'resources': ['routes']}, {'verbs': ['create'], 'apiGroups': ['authentication.k8s.io'], 'resources': ['tokenreviews']}]}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "Role",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:52:14Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:rules": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:52:14Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-x",
                    "resourceVersion": "5134073",
                    "uid": "59a9a6b1-7142-4fd0-9082-683a7dd6fcae"
                },
                "rules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "configmaps",
                            "endpoints",
                            "pods/log"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "namespaces",
                            "pods",
                            "replicationcontrollers",
                            "services"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resources": [
                            "pods/portforward"
                        ],
                        "verbs": [
                            "create",
                            "post"
                        ]
                    },
                    {
                        "apiGroups": [
                            "extensions",
                            "apps"
                        ],
                        "resources": [
                            "daemonsets",
                            "deployments",
                            "replicasets",
                            "statefulsets"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "batch"
                        ],
                        "resources": [
                            "cronjobs",
                            "jobs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "networking.istio.io",
                            "security.istio.io",
                            "extensions.istio.io",
                            "telemetry.istio.io",
                            "gateway.networking.k8s.io"
                        ],
                        "resources": [
                            "*"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "create",
                            "delete",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "apps.openshift.io"
                        ],
                        "resources": [
                            "deploymentconfigs"
                        ],
                        "verbs": [
                            "get",
                            "list",
                            "watch",
                            "patch"
                        ]
                    },
                    {
                        "apiGroups": [
                            "project.openshift.io"
                        ],
                        "resources": [
                            "projects"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "route.openshift.io"
                        ],
                        "resources": [
                            "routes"
                        ],
                        "verbs": [
                            "get"
                        ]
                    },
                    {
                        "apiGroups": [
                            "authentication.k8s.io"
                        ],
                        "resources": [
                            "tokenreviews"
                        ],
                        "verbs": [
                            "create"
                        ]
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}

TASK [Get role binding] ********************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert the role binding provides the read-write role] ********************
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'RoleBinding', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'istio-system', 'uid': '007361d1-3ecd-437f-b088-f5cec0d93e32', 'resourceVersion': '5134024', 'creationTimestamp': '2024-03-25T06:52:05Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:52:05Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:roleRef': {}, 'f:subjects': {}}}]}, 'subjects': [{'kind': 'ServiceAccount', 'name': 'kiali-service-account', 'namespace': 'istio-system'}], 'roleRef': {'apiGroup': 'rbac.authorization.k8s.io', 'kind': 'Role', 'name': 'kiali'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:52:05Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:roleRef": {},
                                "f:subjects": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:52:05Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "istio-system",
                    "resourceVersion": "5134024",
                    "uid": "007361d1-3ecd-437f-b088-f5cec0d93e32"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "kiali"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kiali-service-account",
                        "namespace": "istio-system"
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'RoleBinding', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-1', 'uid': 'ab5e51ab-d0d4-48c2-8520-a5058706c443', 'resourceVersion': '5134074', 'creationTimestamp': '2024-03-25T06:52:14Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:52:14Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:roleRef': {}, 'f:subjects': {}}}]}, 'subjects': [{'kind': 'ServiceAccount', 'name': 'kiali-service-account', 'namespace': 'istio-system'}], 'roleRef': {'apiGroup': 'rbac.authorization.k8s.io', 'kind': 'Role', 'name': 'kiali'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:52:14Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:roleRef": {},
                                "f:subjects": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:52:14Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-1",
                    "resourceVersion": "5134074",
                    "uid": "ab5e51ab-d0d4-48c2-8520-a5058706c443"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "kiali"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kiali-service-account",
                        "namespace": "istio-system"
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'RoleBinding', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-2', 'uid': 'c91da3a7-9337-4167-9bd8-d4e966210d1e', 'resourceVersion': '5134076', 'creationTimestamp': '2024-03-25T06:52:14Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:52:14Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:roleRef': {}, 'f:subjects': {}}}]}, 'subjects': [{'kind': 'ServiceAccount', 'name': 'kiali-service-account', 'namespace': 'istio-system'}], 'roleRef': {'apiGroup': 'rbac.authorization.k8s.io', 'kind': 'Role', 'name': 'kiali'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:52:14Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:roleRef": {},
                                "f:subjects": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:52:14Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-2",
                    "resourceVersion": "5134076",
                    "uid": "c91da3a7-9337-4167-9bd8-d4e966210d1e"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "kiali"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kiali-service-account",
                        "namespace": "istio-system"
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [{'kind': 'RoleBinding', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'metadata': {'name': 'kiali', 'namespace': 'cluster-wide-access-test-x', 'uid': '9b4f001a-6330-4150-898b-e148c02d01c7', 'resourceVersion': '5134082', 'creationTimestamp': '2024-03-25T06:52:14Z', 'labels': {'app': 'kiali', 'app.kubernetes.io/instance': 'kiali', 'app.kubernetes.io/name': 'kiali', 'app.kubernetes.io/part-of': 'kiali', 'app.kubernetes.io/version': 'master', 'version': 'master'}, 'annotations': {'operator-sdk/primary-resource': 'kiali-operator/kiali', 'operator-sdk/primary-resource-type': 'Kiali.kiali.io'}, 'managedFields': [{'manager': 'OpenAPI-Generator', 'operation': 'Update', 'apiVersion': 'rbac.authorization.k8s.io/v1', 'time': '2024-03-25T06:52:14Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:operator-sdk/primary-resource': {}, 'f:operator-sdk/primary-resource-type': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:version': {}}}, 'f:roleRef': {}, 'f:subjects': {}}}]}, 'subjects': [{'kind': 'ServiceAccount', 'name': 'kiali-service-account', 'namespace': 'istio-system'}], 'roleRef': {'apiGroup': 'rbac.authorization.k8s.io', 'kind': 'Role', 'name': 'kiali'}}], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": [
            {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "RoleBinding",
                "metadata": {
                    "annotations": {
                        "operator-sdk/primary-resource": "kiali-operator/kiali",
                        "operator-sdk/primary-resource-type": "Kiali.kiali.io"
                    },
                    "creationTimestamp": "2024-03-25T06:52:14Z",
                    "labels": {
                        "app": "kiali",
                        "app.kubernetes.io/instance": "kiali",
                        "app.kubernetes.io/name": "kiali",
                        "app.kubernetes.io/part-of": "kiali",
                        "app.kubernetes.io/version": "master",
                        "version": "master"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:annotations": {
                                        ".": {},
                                        "f:operator-sdk/primary-resource": {},
                                        "f:operator-sdk/primary-resource-type": {}
                                    },
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:app.kubernetes.io/instance": {},
                                        "f:app.kubernetes.io/name": {},
                                        "f:app.kubernetes.io/part-of": {},
                                        "f:app.kubernetes.io/version": {},
                                        "f:version": {}
                                    }
                                },
                                "f:roleRef": {},
                                "f:subjects": {}
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2024-03-25T06:52:14Z"
                        }
                    ],
                    "name": "kiali",
                    "namespace": "cluster-wide-access-test-x",
                    "resourceVersion": "5134082",
                    "uid": "9b4f001a-6330-4150-898b-e148c02d01c7"
                },
                "roleRef": {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Role",
                    "name": "kiali"
                },
                "subjects": [
                    {
                        "kind": "ServiceAccount",
                        "name": "kiali-service-account",
                        "namespace": "istio-system"
                    }
                ]
            }
        ]
    },
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/none_clusterrole_asserts.yml for localhost

TASK [Get cluster roles] *******************************************************
ok: [localhost]

TASK [Get viewer cluster roles] ************************************************
ok: [localhost]

TASK [Assert that no cluster roles exist] **************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert that no viewer cluster roles exist] *******************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Get cluster role binding] ************************************************
ok: [localhost]

TASK [Assert that no cluster role binding exists] ******************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "put back AN=** and see that the roles have been removed and we are back to using cluster-wide-access and clusterroles"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/set_kiali_cr.yml for localhost

TASK [Change Kiali CR with new Kiali CR] ***************************************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
     "metadata": {
-        "generation": 6,
+        "generation": 7,
         "managedFields": [
             {
                 "apiVersion": "kiali.io/v1alpha1",
@@ -16,42 +16,6 @@
                 "manager": "ansible-operator",
                 "operation": "Update",
                 "time": "2024-03-25T06:34:54Z"
-            },
-            {
-                "apiVersion": "kiali.io/v1alpha1",
-                "fieldsType": "FieldsV1",
-                "fieldsV1": {
-                    "f:spec": {
-                        ".": {},
-                        "f:auth": {
-                            ".": {},
-                            "f:strategy": {}
-                        },
-                        "f:deployment": {
-                            ".": {},
-                            "f:accessible_namespaces": {},
-                            "f:cluster_wide_access": {},
-                            "f:image_name": {},
-                            "f:image_pull_policy": {},
-                            "f:image_version": {},
-                            "f:ingress": {
-                                ".": {},
-                                "f:enabled": {}
-                            },
-                            "f:logger": {
-                                ".": {},
-                                "f:log_level": {}
-                            },
-                            "f:namespace": {},
-                            "f:service_type": {}
-                        },
-                        "f:istio_namespace": {},
-                        "f:version": {}
-                    }
-                },
-                "manager": "OpenAPI-Generator",
-                "operation": "Update",
-                "time": "2024-03-25T06:51:00Z"
             },
             {
                 "apiVersion": "kiali.io/v1alpha1",
@@ -97,16 +61,52 @@
                 "operation": "Update",
                 "subresource": "status",
                 "time": "2024-03-25T06:52:30Z"
+            },
+            {
+                "apiVersion": "kiali.io/v1alpha1",
+                "fieldsType": "FieldsV1",
+                "fieldsV1": {
+                    "f:spec": {
+                        ".": {},
+                        "f:auth": {
+                            ".": {},
+                            "f:strategy": {}
+                        },
+                        "f:deployment": {
+                            ".": {},
+                            "f:accessible_namespaces": {},
+                            "f:cluster_wide_access": {},
+                            "f:image_name": {},
+                            "f:image_pull_policy": {},
+                            "f:image_version": {},
+                            "f:ingress": {
+                                ".": {},
+                                "f:enabled": {}
+                            },
+                            "f:logger": {
+                                ".": {},
+                                "f:log_level": {}
+                            },
+                            "f:namespace": {},
+                            "f:service_type": {}
+                        },
+                        "f:istio_namespace": {},
+                        "f:version": {}
+                    }
+                },
+                "manager": "OpenAPI-Generator",
+                "operation": "Update",
+                "time": "2024-03-25T06:54:01Z"
             }
         ],
-        "resourceVersion": "5134149"
+        "resourceVersion": "5134669"
     },
     "spec": {
         "deployment": {
             "accessible_namespaces": [
-                "cluster-wide-access-test-[12x]"
+                "**"
             ],
-            "cluster_wide_access": false
+            "cluster_wide_access": true
         }
     }
 }

changed: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_cr_changes.yml for localhost

TASK [Wait for Kiali CR changes to take effect] ********************************
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (360 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (359 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (358 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (357 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (356 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (355 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (354 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (353 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (352 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (351 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (350 retries left).
FAILED - RETRYING: [localhost]: Wait for Kiali CR changes to take effect (349 retries left).
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/wait_for_kiali_running.yml for localhost

TASK [Asserting that Kiali Pod exists and there is only one] *******************
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (360 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (359 retries left).
FAILED - RETRYING: [localhost]: Asserting that Kiali Pod exists and there is only one (358 retries left).
ok: [localhost]

TASK [Wait for Kiali to be running and accepting requests] *********************
ok: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/common/tasks.yml for localhost

TASK [Get information about the cluster] ***************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Determine the cluster type] **********************************************
ok: [localhost]

TASK [Get Kiali CR if present] *************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Get Kiali Operator Pod] **************************************************
ok: [localhost]

TASK [Get Kiali Pod] ***********************************************************
ok: [localhost]

TASK [Get Kiali Configmap] *****************************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Format Configmap] ********************************************************
ok: [localhost]

TASK [Get Kiali Deployment] ****************************************************
ok: [localhost]

TASK [Get Kiali Service] *******************************************************
ok: [localhost]

TASK [Get Kiali Route] *********************************************************
ok: [localhost]

TASK [Get Kiali Ingress] *******************************************************
skipping: [localhost]

TASK [Determine the Kiali Route URL on OpenShift] ******************************
ok: [localhost]

TASK [Determine the Kiali Ingress URL on minikube] *****************************
skipping: [localhost]

TASK [Determine the Kiali Ingress URL on kind] *********************************
skipping: [localhost]

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/pod_asserts.yml for localhost

TASK [Assert Kiali Pod is Running and there is only one] ***********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Assert Kiali Pod is Running on the correct Namespace] ********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/accessible_namespaces_contains.yml for localhost

TASK [Assert Accessible Namespaces contains ['**']] ****************************
ok: [localhost] => (item=**) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "**",
    "msg": "All assertions passed"
}

TASK [debug] *******************************************************************
ok: [localhost] => {
    "msg": "test to make sure we are back to cluster-wide-access is True"
}

TASK [assert] ******************************************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/rw_clusterrole_asserts.yml for localhost

TASK [Get cluster roles] *******************************************************
ok: [localhost]

TASK [Assert that cluster roles exist] *****************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Get cluster role binding] ************************************************
ok: [localhost]

TASK [Assert the cluster role binding provides the read-write role] ************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [include_tasks] ***********************************************************
included: /tmp/molecule/operator/molecule/asserts/roles-test/none_role_asserts.yml for localhost

TASK [Get roles] ***************************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert that namespaces do not have the roles] ****************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get viewer roles] ********************************************************
ok: [localhost] => (item=['istio-system', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali-viewer'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali-viewer'])

TASK [Assert that namespaces do not have the viewer roles] *********************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'istio-system', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'Role', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali-viewer', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali-viewer'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "Role",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali-viewer",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali-viewer"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

TASK [Get role bindings] *******************************************************
ok: [localhost] => (item=['istio-system', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-1', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-2', 'kiali'])
ok: [localhost] => (item=['cluster-wide-access-test-x', 'kiali'])

TASK [Assert the role bindings do not exist] ***********************************
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'istio-system', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['istio-system', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "istio-system",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "istio-system",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-1', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-1', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-1",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-1",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-2', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-2', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-2",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-2",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}
ok: [localhost] => (item={'changed': False, 'resources': [], 'api_found': True, 'invocation': {'module_args': {'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'namespace': 'cluster-wide-access-test-x', 'name': 'kiali', 'wait': False, 'wait_sleep': 5, 'wait_timeout': 120, 'label_selectors': [], 'field_selectors': [], 'kubeconfig': None, 'context': None, 'host': None, 'api_key': None, 'username': None, 'password': None, 'validate_certs': None, 'ca_cert': None, 'client_cert': None, 'client_key': None, 'proxy': None, 'proxy_headers': None, 'persist_config': None, 'wait_condition': None}}, 'failed': False, 'item': ['cluster-wide-access-test-x', 'kiali'], 'ansible_loop_var': 'item'}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "ansible_loop_var": "item",
        "api_found": true,
        "changed": false,
        "failed": false,
        "invocation": {
            "module_args": {
                "api_key": null,
                "api_version": "rbac.authorization.k8s.io/v1",
                "ca_cert": null,
                "client_cert": null,
                "client_key": null,
                "context": null,
                "field_selectors": [],
                "host": null,
                "kind": "RoleBinding",
                "kubeconfig": null,
                "label_selectors": [],
                "name": "kiali",
                "namespace": "cluster-wide-access-test-x",
                "password": null,
                "persist_config": null,
                "proxy": null,
                "proxy_headers": null,
                "username": null,
                "validate_certs": null,
                "wait": false,
                "wait_condition": null,
                "wait_sleep": 5,
                "wait_timeout": 120
            }
        },
        "item": [
            "cluster-wide-access-test-x",
            "kiali"
        ],
        "resources": []
    },
    "msg": "All assertions passed"
}

PLAY RECAP *********************************************************************
localhost                  : ok=307  changed=8    unreachable=0    failed=0    skipped=31   rescued=0    ignored=0

INFO     Running cluster-wide-access-test > destroy
DEBUG: ANSIBLE ENVIRONMENT:
ANSIBLE_COLLECTIONS_PATH: /home/runner/.cache/molecule/operator/cluster-wide-access-test/collections:/home/runner/.ansible/collections:/usr/share/ansible/collections:/etc/ansible/collections
ANSIBLE_CONFIG: /home/runner/.cache/molecule/operator/cluster-wide-access-test/ansible.cfg
ANSIBLE_FILTER_PLUGINS: /usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/filter:/home/runner/.cache/molecule/operator/cluster-wide-access-test/plugins/filter:/tmp/molecule/operator/plugins/filter:/home/runner/.ansible/plugins/filter:/usr/share/ansible/plugins/filter
ANSIBLE_LIBRARY: /usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/modules:/usr/local/lib/python3.11/site-packages/molecule_plugins/vagrant/modules:/home/runner/.cache/molecule/operator/cluster-wide-access-test/library:/tmp/molecule/operator/library:/home/runner/.ansible/plugins/modules:/usr/share/ansible/plugins/modules
ANSIBLE_ROLES_PATH: /home/runner/.cache/molecule/operator/cluster-wide-access-test/roles:/tmp/molecule:/home/runner/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles

DEBUG: MOLECULE ENVIRONMENT:
MOLECULE_CLUSTER_TYPE: openshift
MOLECULE_DEBUG: 'True'
MOLECULE_DEPENDENCY_NAME: galaxy
MOLECULE_DRIVER_NAME: podman
MOLECULE_DUMP_LOGS_ON_ERROR: 'true'
MOLECULE_ENV_FILE: /tmp/molecule/operator/.env.yml
MOLECULE_EPHEMERAL_DIRECTORY: /home/runner/.cache/molecule/operator/cluster-wide-access-test
MOLECULE_FILE: /home/runner/.cache/molecule/operator/cluster-wide-access-test/molecule.yml
MOLECULE_HELM_CHARTS_REPO: /tmp/molecule/helm-charts-repo
MOLECULE_INSTANCE_CONFIG: /home/runner/.cache/molecule/operator/cluster-wide-access-test/instance_config.yml
MOLECULE_INVENTORY_FILE: /home/runner/.cache/molecule/operator/cluster-wide-access-test/inventory/ansible_inventory.yml
MOLECULE_KIALI_CR_SPEC_VERSION: default
MOLECULE_OPERATOR_INSTALLER: helm
MOLECULE_OPERATOR_PROFILER_ENABLED: 'true'
MOLECULE_OSSMCONSOLE_CR_SPEC_VERSION: default
MOLECULE_PROJECT_DIRECTORY: /tmp/molecule/operator
MOLECULE_PROVISIONER_NAME: ansible
MOLECULE_SCENARIO_DIRECTORY: /tmp/molecule/operator/molecule/cluster-wide-access-test
MOLECULE_SCENARIO_NAME: cluster-wide-access-test
MOLECULE_STATE_FILE: /home/runner/.cache/molecule/operator/cluster-wide-access-test/state.yml
MOLECULE_VERIFIER_NAME: ansible
MOLECULE_VERIFIER_TEST_DIRECTORY: /tmp/molecule/operator/molecule/cluster-wide-access-test/tests
MOLECULE_WAIT_RETRIES: '360'

DEBUG: SHELL REPLAY:
ANSIBLE_COLLECTIONS_PATH=/home/runner/.cache/molecule/operator/cluster-wide-access-test/collections:/home/runner/.ansible/collections:/usr/share/ansible/collections:/etc/ansible/collections ANSIBLE_CONFIG=/home/runner/.cache/molecule/operator/cluster-wide-access-test/ansible.cfg ANSIBLE_FILTER_PLUGINS=/usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/filter:/home/runner/.cache/molecule/operator/cluster-wide-access-test/plugins/filter:/tmp/molecule/operator/plugins/filter:/home/runner/.ansible/plugins/filter:/usr/share/ansible/plugins/filter ANSIBLE_LIBRARY=/usr/local/lib/python3.11/site-packages/molecule/provisioner/ansible/plugins/modules:/usr/local/lib/python3.11/site-packages/molecule_plugins/vagrant/modules:/home/runner/.cache/molecule/operator/cluster-wide-access-test/library:/tmp/molecule/operator/library:/home/runner/.ansible/plugins/modules:/usr/share/ansible/plugins/modules ANSIBLE_ROLES_PATH=/home/runner/.cache/molecule/operator/cluster-wide-access-test/roles:/tmp/molecule:/home/runner/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles MOLECULE_CLUSTER_TYPE=openshift MOLECULE_DEBUG=True MOLECULE_DEPENDENCY_NAME=galaxy MOLECULE_DRIVER_NAME=podman MOLECULE_DUMP_LOGS_ON_ERROR=true MOLECULE_ENV_FILE=/tmp/molecule/operator/.env.yml MOLECULE_EPHEMERAL_DIRECTORY=/home/runner/.cache/molecule/operator/cluster-wide-access-test MOLECULE_FILE=/home/runner/.cache/molecule/operator/cluster-wide-access-test/molecule.yml MOLECULE_HELM_CHARTS_REPO=/tmp/molecule/helm-charts-repo MOLECULE_INSTANCE_CONFIG=/home/runner/.cache/molecule/operator/cluster-wide-access-test/instance_config.yml MOLECULE_INVENTORY_FILE=/home/runner/.cache/molecule/operator/cluster-wide-access-test/inventory/ansible_inventory.yml MOLECULE_KIALI_CR_SPEC_VERSION=default MOLECULE_OPERATOR_INSTALLER=helm MOLECULE_OPERATOR_PROFILER_ENABLED=true MOLECULE_OSSMCONSOLE_CR_SPEC_VERSION=default MOLECULE_PROJECT_DIRECTORY=/tmp/molecule/operator MOLECULE_PROVISIONER_NAME=ansible MOLECULE_SCENARIO_DIRECTORY=/tmp/molecule/operator/molecule/cluster-wide-access-test MOLECULE_SCENARIO_NAME=cluster-wide-access-test MOLECULE_STATE_FILE=/home/runner/.cache/molecule/operator/cluster-wide-access-test/state.yml MOLECULE_VERIFIER_NAME=ansible MOLECULE_VERIFIER_TEST_DIRECTORY=/tmp/molecule/operator/molecule/cluster-wide-access-test/tests MOLECULE_WAIT_RETRIES=360


PLAY [Destroy] *****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

PLAY [Destroy] *****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Get information about the cluster] ***************************************
/usr/local/lib/python3.11/site-packages/urllib3/connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.ocp4.local'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
ok: [localhost]

TASK [Determine the cluster type] **********************************************
ok: [localhost]

TASK [Determine if the operator installation is managed externally or not] *****
ok: [localhost]

TASK [Remove Kiali CR] *********************************************************
changed: [localhost]

TASK [Wait for Kiali ConfigMap to be uninstalled] ******************************
ok: [localhost]

TASK [Uninstall Operator via Helm] *********************************************
changed: [localhost]

TASK [Remove CRDs] *************************************************************
changed: [localhost]

TASK [Removing Operator namespace] *********************************************
changed: [localhost]

TASK [Removing CR namespace if it is different than control plane and operator namespace] ***
skipping: [localhost]

PLAY [Process Test Namespaces [state=absent]] **********************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [k8s] *********************************************************************
changed: [localhost]

TASK [k8s] *********************************************************************
changed: [localhost]

TASK [k8s] *********************************************************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=14   changed=7    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0

INFO     Pruning extra files from scenario ephemeral directory
podman volume rm molecule-tests-volume
molecule-tests-volume
